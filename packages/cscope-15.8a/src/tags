!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
mouse	mouse.c	/^BOOL	mouse = NO;			\/* mouse interface *\/$/;"	v
unixpcmouse	mouse.c	/^BOOL	unixpcmouse = NO;	\/* running with a mouse on the Unix PC? *\/$/;"	v
uw_hs	mouse.c	/^static int uw_hs, uw_vs;	\/* character height and width *\/$/;"	v	file:
uw_vs	mouse.c	/^static int uw_hs, uw_vs;	\/* character height and width *\/$/;"	v	file:
rcsid	mouse.c	/^static char const rcsid[] = "$Id: mouse.c,v 1.4 2001\/07\/05 14:31:00 broeker Exp $";$/;"	v	file:
text	mouse.c	/^	char	*text;$/;"	m	struct:__anon1	file:	access:public
__anon1::text	mouse.c	/^	char	*text;$/;"	m	struct:__anon1	file:	access:public
value	mouse.c	/^	char	*value;$/;"	m	struct:__anon1	file:	access:public
__anon1::value	mouse.c	/^	char	*value;$/;"	m	struct:__anon1	file:	access:public
MENU	mouse.c	/^} MENU;$/;"	t	typeref:struct:__anon1	file:
mainmenu	mouse.c	/^static	MENU	mainmenu[] = {		\/* main menu *\/$/;"	v	file:
changemenu	mouse.c	/^static	MENU	changemenu[] = {	\/* change mode menu *\/$/;"	v	file:
loaded	mouse.c	/^static	MENU	*loaded;		\/* menu loaded *\/$/;"	v	file:
emacsviterm	mouse.c	/^static	BOOL	emacsviterm = NO;	\/* terminal type *\/$/;"	v	file:
loadmenu	mouse.c	/^static	void	loadmenu(MENU *menu);$/;"	p	file:	signature:(MENU *menu)
getcoordinate	mouse.c	/^static	int	getcoordinate(void);$/;"	p	file:	signature:(void)
getpercent	mouse.c	/^static	int	getpercent(void);$/;"	p	file:	signature:(void)
mouseinit	mouse.c	/^mouseinit(void)$/;"	f	signature:(void)
mousemenu	mouse.c	/^mousemenu(void)$/;"	f	signature:(void)
loadmenu	mouse.c	/^loadmenu(MENU *menu)$/;"	f	file:	signature:(MENU *menu)
mousereinit	mouse.c	/^mousereinit(void)$/;"	f	signature:(void)
mousecleanup	mouse.c	/^mousecleanup(void)$/;"	f	signature:(void)
drawscrollbar	mouse.c	/^drawscrollbar(int top, int bot)$/;"	f	signature:(int top, int bot)
getmouseaction	mouse.c	/^getmouseaction(char leading_char)$/;"	f	signature:(char leading_char)
getcoordinate	mouse.c	/^getcoordinate(void)$/;"	f	file:	signature:(void)
getpercent	mouse.c	/^getpercent(void)$/;"	f	file:	signature:(void)
CSCOPE_LIBRARY_H	library.h	36;"	d
compath	library.h	/^char	*compath(char *pathname);$/;"	p	signature:(char *pathname)
egrepinit	library.h	/^char	*egrepinit(char *egreppat);$/;"	p	signature:(char *egreppat)
logdir	library.h	/^char	*logdir(char *name);$/;"	p	signature:(char *name)
mybasename	library.h	/^char	*mybasename(char *path);$/;"	p	signature:(char *path)
myfopen	library.h	/^FILE	*myfopen(char *path, char *mode);$/;"	p	signature:(char *path, char *mode)
mygetenv	library.h	/^char	*mygetenv(char *variable, char *deflt);$/;"	p	signature:(char *variable, char *deflt)
myopen	library.h	/^int	myopen(char *path, int flag, int mode);$/;"	p	signature:(char *path, int flag, int mode)
mypopen	library.h	/^FILE	*mypopen(char *cmd, char *mode);$/;"	p	signature:(char *cmd, char *mode)
mypclose	library.h	/^int	mypclose(FILE *ptr);$/;"	p	signature:(FILE *ptr)
vpfopen	library.h	/^FILE	*vpfopen(char *filename, char *type);$/;"	p	signature:(char *filename, char *type)
egrepcaseless	library.h	/^void	egrepcaseless(int i);$/;"	p	signature:(int i)
OS_BSD	snprintf.c	179;"	d	file:
__c99	snprintf.c	182;"	d	file:
OS_IRIX	snprintf.c	184;"	d	file:
OS_SYSV	snprintf.c	185;"	d	file:
OS_SYSV	snprintf.c	187;"	d	file:
OS_LINUX	snprintf.c	189;"	d	file:
HAVE_SNPRINTF	snprintf.c	193;"	d	file:
HAVE_VSNPRINTF	snprintf.c	196;"	d	file:
HAVE_ASPRINTF	snprintf.c	199;"	d	file:
HAVE_VASPRINTF	snprintf.c	202;"	d	file:
snprintf	snprintf.c	205;"	d	file:
vsnprintf	snprintf.c	208;"	d	file:
asprintf	snprintf.c	211;"	d	file:
vasprintf	snprintf.c	214;"	d	file:
HAVE_STDARG_H	snprintf.c	218;"	d	file:
HAVE_STDDEF_H	snprintf.c	221;"	d	file:
HAVE_STDINT_H	snprintf.c	224;"	d	file:
HAVE_STDLIB_H	snprintf.c	227;"	d	file:
HAVE_INTTYPES_H	snprintf.c	230;"	d	file:
HAVE_LOCALE_H	snprintf.c	233;"	d	file:
HAVE_LOCALECONV	snprintf.c	236;"	d	file:
HAVE_LCONV_DECIMAL_POINT	snprintf.c	239;"	d	file:
HAVE_LCONV_THOUSANDS_SEP	snprintf.c	242;"	d	file:
HAVE_LONG_DOUBLE	snprintf.c	245;"	d	file:
HAVE_LONG_LONG_INT	snprintf.c	248;"	d	file:
HAVE_UNSIGNED_LONG_LONG_INT	snprintf.c	251;"	d	file:
HAVE_INTMAX_T	snprintf.c	254;"	d	file:
HAVE_UINTMAX_T	snprintf.c	257;"	d	file:
HAVE_UINTPTR_T	snprintf.c	260;"	d	file:
HAVE_PTRDIFF_T	snprintf.c	263;"	d	file:
HAVE_VA_COPY	snprintf.c	266;"	d	file:
HAVE___VA_COPY	snprintf.c	269;"	d	file:
snprintf	snprintf.c	272;"	d	file:
vsnprintf	snprintf.c	273;"	d	file:
asprintf	snprintf.c	274;"	d	file:
vasprintf	snprintf.c	275;"	d	file:
VA_START	snprintf.c	281;"	d	file:
VA_SHIFT	snprintf.c	284;"	d	file:
VA_START	snprintf.c	288;"	d	file:
VA_SHIFT	snprintf.c	289;"	d	file:
VA_START	snprintf.c	292;"	d	file:
VA_SHIFT	snprintf.c	293;"	d	file:
VA_COPY	snprintf.c	301;"	d	file:
VA_END_COPY	snprintf.c	304;"	d	file:
VA_COPY	snprintf.c	307;"	d	file:
VA_END_COPY	snprintf.c	308;"	d	file:
VA_COPY	snprintf.c	310;"	d	file:
VA_END_COPY	snprintf.c	311;"	d	file:
VA_COPY	snprintf.c	313;"	d	file:
VA_END_COPY	snprintf.c	314;"	d	file:
NEED_MYMEMCPY	snprintf.c	315;"	d	file:
mymemcpy	snprintf.c	/^static void *mymemcpy(void *, void *, size_t);$/;"	p	file:	signature:(void *, void *, size_t)
ULONG_MAX	snprintf.c	339;"	d	file:
ULONG_MAX	snprintf.c	341;"	d	file:
ULLONG	snprintf.c	345;"	d	file:
ULLONG	snprintf.c	348;"	d	file:
ULLONG_MAX	snprintf.c	350;"	d	file:
ULLONG	snprintf.c	353;"	d	file:
ULLONG_MAX	snprintf.c	355;"	d	file:
ULLONG_MAX	snprintf.c	357;"	d	file:
UINTMAX_T	snprintf.c	362;"	d	file:
UINTMAX_T	snprintf.c	365;"	d	file:
UINTMAX_MAX	snprintf.c	367;"	d	file:
UINTMAX_T	snprintf.c	370;"	d	file:
UINTMAX_MAX	snprintf.c	372;"	d	file:
UINTMAX_MAX	snprintf.c	374;"	d	file:
LDOUBLE	snprintf.c	380;"	d	file:
LDOUBLE	snprintf.c	382;"	d	file:
LLONG	snprintf.c	389;"	d	file:
LLONG	snprintf.c	391;"	d	file:
INTMAX_T	snprintf.c	398;"	d	file:
INTMAX_T	snprintf.c	400;"	d	file:
UINTPTR_T	snprintf.c	407;"	d	file:
UINTPTR_T	snprintf.c	409;"	d	file:
PTRDIFF_T	snprintf.c	416;"	d	file:
PTRDIFF_T	snprintf.c	418;"	d	file:
UPTRDIFF_T	snprintf.c	428;"	d	file:
SSIZE_T	snprintf.c	437;"	d	file:
ERANGE	snprintf.c	442;"	d	file:
EOVERFLOW	snprintf.c	445;"	d	file:
MAX_CONVERT_LENGTH	snprintf.c	453;"	d	file:
MAX_CONVERT_LENGTH	snprintf.c	455;"	d	file:
PRINT_S_DEFAULT	snprintf.c	458;"	d	file:
PRINT_S_FLAGS	snprintf.c	459;"	d	file:
PRINT_S_WIDTH	snprintf.c	460;"	d	file:
PRINT_S_DOT	snprintf.c	461;"	d	file:
PRINT_S_PRECISION	snprintf.c	462;"	d	file:
PRINT_S_MOD	snprintf.c	463;"	d	file:
PRINT_S_CONV	snprintf.c	464;"	d	file:
PRINT_F_MINUS	snprintf.c	467;"	d	file:
PRINT_F_PLUS	snprintf.c	468;"	d	file:
PRINT_F_SPACE	snprintf.c	469;"	d	file:
PRINT_F_NUM	snprintf.c	470;"	d	file:
PRINT_F_ZERO	snprintf.c	471;"	d	file:
PRINT_F_QUOTE	snprintf.c	472;"	d	file:
PRINT_F_UP	snprintf.c	473;"	d	file:
PRINT_F_UNSIGNED	snprintf.c	474;"	d	file:
PRINT_F_TYPE_G	snprintf.c	475;"	d	file:
PRINT_F_TYPE_E	snprintf.c	476;"	d	file:
PRINT_C_CHAR	snprintf.c	479;"	d	file:
PRINT_C_SHORT	snprintf.c	480;"	d	file:
PRINT_C_LONG	snprintf.c	481;"	d	file:
PRINT_C_LLONG	snprintf.c	482;"	d	file:
PRINT_C_LDOUBLE	snprintf.c	483;"	d	file:
PRINT_C_SIZE	snprintf.c	484;"	d	file:
PRINT_C_PTRDIFF	snprintf.c	485;"	d	file:
PRINT_C_INTMAX	snprintf.c	486;"	d	file:
MAX	snprintf.c	489;"	d	file:
CHARTOINT	snprintf.c	492;"	d	file:
ISDIGIT	snprintf.c	495;"	d	file:
ISNAN	snprintf.c	498;"	d	file:
ISINF	snprintf.c	501;"	d	file:
OUTCHAR	snprintf.c	505;"	d	file:
OUTCHAR	snprintf.c	507;"	d	file:
fmtstr	snprintf.c	/^static void fmtstr(char *, size_t *, size_t, const char *, int, int, int);$/;"	p	file:	signature:(char *, size_t *, size_t, const char *, int, int, int)
fmtint	snprintf.c	/^static void fmtint(char *, size_t *, size_t, INTMAX_T, int, int, int, int);$/;"	p	file:	signature:(char *, size_t *, size_t, INTMAX_T, int, int, int, int)
fmtflt	snprintf.c	/^static void fmtflt(char *, size_t *, size_t, LDOUBLE, int, int, int, int *);$/;"	p	file:	signature:(char *, size_t *, size_t, LDOUBLE, int, int, int, int *)
printsep	snprintf.c	/^static void printsep(char *, size_t *, size_t);$/;"	p	file:	signature:(char *, size_t *, size_t)
getnumsep	snprintf.c	/^static int getnumsep(int);$/;"	p	file:	signature:(int)
getexponent	snprintf.c	/^static int getexponent(LDOUBLE);$/;"	p	file:
convert	snprintf.c	/^static int convert(UINTMAX_T, char *, size_t, int, int);$/;"	p	file:	signature:(UINTMAX_T, char *, size_t, int, int)
cast	snprintf.c	/^static UINTMAX_T cast(LDOUBLE);$/;"	p	file:
myround	snprintf.c	/^static UINTMAX_T myround(LDOUBLE);$/;"	p	file:
mypow10	snprintf.c	/^static LDOUBLE mypow10(int);$/;"	p	file:	signature:(int)
rpl_vsnprintf	snprintf.c	/^rpl_vsnprintf(char *str, size_t size, const char *format, va_list args)$/;"	f	signature:(char *str, size_t size, const char *format, va_list args)
fmtstr	snprintf.c	/^fmtstr(char *str, size_t *len, size_t size, const char *value, int width,$/;"	f	file:	signature:(char *str, size_t *len, size_t size, const char *value, int width, int precision, int flags)
fmtint	snprintf.c	/^fmtint(char *str, size_t *len, size_t size, INTMAX_T value, int base, int width,$/;"	f	file:	signature:(char *str, size_t *len, size_t size, INTMAX_T value, int base, int width, int precision, int flags)
fmtflt	snprintf.c	/^fmtflt(char *str, size_t *len, size_t size, LDOUBLE fvalue, int width,$/;"	f	file:	signature:(char *str, size_t *len, size_t size, LDOUBLE fvalue, int width, int precision, int flags, int *overflow)
printsep	snprintf.c	/^printsep(char *str, size_t *len, size_t size)$/;"	f	file:	signature:(char *str, size_t *len, size_t size)
getnumsep	snprintf.c	/^getnumsep(int digits)$/;"	f	file:	signature:(int digits)
getexponent	snprintf.c	/^getexponent(LDOUBLE value)$/;"	f	file:	signature:(LDOUBLE value)
convert	snprintf.c	/^convert(UINTMAX_T value, char *buf, size_t size, int base, int caps)$/;"	f	file:	signature:(UINTMAX_T value, char *buf, size_t size, int base, int caps)
cast	snprintf.c	/^cast(LDOUBLE value)$/;"	f	file:	signature:(LDOUBLE value)
myround	snprintf.c	/^myround(LDOUBLE value)$/;"	f	file:	signature:(LDOUBLE value)
mypow10	snprintf.c	/^mypow10(int exponent)$/;"	f	file:	signature:(int exponent)
mymemcpy	snprintf.c	/^mymemcpy(void *dst, void *src, size_t len)$/;"	f	signature:(void *dst, void *src, size_t len)
rpl_vasprintf	snprintf.c	/^rpl_vasprintf(char **ret, const char *format, va_list ap)$/;"	f	signature:(char **ret, const char *format, va_list ap)
rpl_snprintf	snprintf.c	/^rpl_snprintf(char *str, size_t size, const char *format, ...)$/;"	f	signature:(char *str, size_t size, const char *format, ...)
rpl_asprintf	snprintf.c	/^rpl_asprintf(char **ret, const char *format, ...)$/;"	f	signature:(char **ret, const char *format, ...)
main	snprintf.c	/^int main(void);$/;"	p	file:	signature:(void)
main	snprintf.c	/^main(void)$/;"	f	signature:(void)
TEST_NILS	snprintf.c	2042;"	d	file:
TEST	snprintf.c	2048;"	d	file:
TEST	snprintf.c	2050;"	d	file:
MAXHELP	help.c	49;"	d	file:
rcsid	help.c	/^static char const rcsid[] = "$Id: help.c,v 1.6 2005\/04\/29 18:44:31 broeker Exp $";$/;"	v	file:
help	help.c	/^help(void)$/;"	f	signature:(void)
CSCOPE_VERSION_H	version.h	42;"	d
FILEVERSION	version.h	44;"	d
FIXVERSION	version.h	45;"	d
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/cscope$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/cscope$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/cscope$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/cscope$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
build_triplet	Makefile	/^build_triplet = x86_64-unknown-linux-gnu$/;"	m
host_triplet	Makefile	/^host_triplet = x86_64-unknown-linux-gnu$/;"	m
EXTRA_PROGRAMS	Makefile	/^EXTRA_PROGRAMS = gscope$(EXEEXT)$/;"	m
bin_PROGRAMS	Makefile	/^bin_PROGRAMS = cscope$(EXEEXT)$/;"	m
subdir	Makefile	/^subdir = src$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(srcdir)\/Makefile.in egrep.c \\$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/acinclude.m4 \\$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(SHELL) $(top_srcdir)\/mkinstalldirs$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
am__installdirs	Makefile	/^am__installdirs = "$(DESTDIR)$(bindir)"$/;"	m
PROGRAMS	Makefile	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
am__cscope_SOURCES_DIST	Makefile	/^am__cscope_SOURCES_DIST = fscanner.l scanner.l egrep.y alloc.c alloc.h \\$/;"	m
am__objects_1	Makefile	/^am__objects_1 = fscanner.$(OBJEXT)$/;"	m
am_cscope_OBJECTS	Makefile	/^am_cscope_OBJECTS = $(am__objects_1) egrep.$(OBJEXT) alloc.$(OBJEXT) \\$/;"	m
cscope_OBJECTS	Makefile	/^cscope_OBJECTS = $(am_cscope_OBJECTS)$/;"	m
am__DEPENDENCIES_1	Makefile	/^am__DEPENDENCIES_1 =$/;"	m
cscope_DEPENDENCIES	Makefile	/^cscope_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \\$/;"	m
am__gscope_SOURCES_DIST	Makefile	/^am__gscope_SOURCES_DIST = gscope.c fscanner.l scanner.l egrep.y \\$/;"	m
am__objects_2	Makefile	/^am__objects_2 = gscope-fscanner.$(OBJEXT)$/;"	m
am__objects_3	Makefile	/^am__objects_3 = $(am__objects_2) gscope-egrep.$(OBJEXT) \\$/;"	m
am_gscope_OBJECTS	Makefile	/^am_gscope_OBJECTS = gscope-gscope.$(OBJEXT) \\$/;"	m
gscope_OBJECTS	Makefile	/^gscope_OBJECTS = $(am_gscope_OBJECTS)$/;"	m
gscope_DEPENDENCIES	Makefile	/^gscope_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
gscope_LINK	Makefile	/^gscope_LINK = $(CCLD) $(gscope_CFLAGS) $(CFLAGS) $(gscope_LDFLAGS) \\$/;"	m
DEFAULT_INCLUDES	Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
depcomp	Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
am__depfiles_maybe	Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__mv	Makefile	/^am__mv = mv -f$/;"	m
COMPILE	Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CCLD	Makefile	/^CCLD = $(CC)$/;"	m
LINK	Makefile	/^LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@$/;"	m
LEXCOMPILE	Makefile	/^LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)$/;"	m
YLWRAP	Makefile	/^YLWRAP = $(top_srcdir)\/ylwrap$/;"	m
YACCCOMPILE	Makefile	/^YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)$/;"	m
SOURCES	Makefile	/^SOURCES = $(cscope_SOURCES) $(EXTRA_cscope_SOURCES) $(gscope_SOURCES)$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES = $(am__cscope_SOURCES_DIST) $(EXTRA_cscope_SOURCES) \\$/;"	m
ETAGS	Makefile	/^ETAGS = etags$/;"	m
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/usr\/home\/yilong\/vimplugs\/packages\/cscope-15.8a\/missing --run aclocal-1.11$/;"	m
AMTAR	Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/usr\/home\/yilong\/vimplugs\/packages\/cscope-15.8a\/missing --run autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/usr\/home\/yilong\/vimplugs\/packages\/cscope-15.8a\/missing --run autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/usr\/home\/yilong\/vimplugs\/packages\/cscope-15.8a\/missing --run automake-1.11$/;"	m
AWK	Makefile	/^AWK = gawk$/;"	m
CC	Makefile	/^CC = gcc$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O2$/;"	m
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CURSES_INCLUDEDIR	Makefile	/^CURSES_INCLUDEDIR = $/;"	m
CURSES_LIBS	Makefile	/^CURSES_LIBS = -lncurses$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
EGREP	Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EXEEXT	Makefile	/^EXEEXT = $/;"	m
GREP	Makefile	/^GREP = \/bin\/grep$/;"	m
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LEX	Makefile	/^LEX = flex$/;"	m
LEXLIB	Makefile	/^LEXLIB = -lfl$/;"	m
LEX_OUTPUT_ROOT	Makefile	/^LEX_OUTPUT_ROOT = lex.yy$/;"	m
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBS	Makefile	/^LIBS = $/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/usr\/home\/yilong\/vimplugs\/packages\/cscope-15.8a\/missing --run makeinfo$/;"	m
MKDIR_P	Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
PACKAGE	Makefile	/^PACKAGE = cscope$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = $/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = $/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = $/;"	m
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = $/;"	m
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
STRIP	Makefile	/^STRIP = $/;"	m
VERSION	Makefile	/^VERSION = 15.8a$/;"	m
YACC	Makefile	/^YACC = bison -y$/;"	m
YFLAGS	Makefile	/^YFLAGS = $/;"	m
abs_builddir	Makefile	/^abs_builddir = \/usr\/home\/yilong\/vimplugs\/packages\/cscope-15.8a\/src$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/usr\/home\/yilong\/vimplugs\/packages\/cscope-15.8a\/src$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/usr\/home\/yilong\/vimplugs\/packages\/cscope-15.8a$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/usr\/home\/yilong\/vimplugs\/packages\/cscope-15.8a$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__tar	Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__untar	Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
build	Makefile	/^build = x86_64-unknown-linux-gnu$/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
build_cpu	Makefile	/^build_cpu = x86_64$/;"	m
build_os	Makefile	/^build_os = linux-gnu$/;"	m
build_vendor	Makefile	/^build_vendor = unknown$/;"	m
builddir	Makefile	/^builddir = .$/;"	m
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE}$/;"	m
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
gnome1	Makefile	/^gnome1 = $/;"	m
gnome2	Makefile	/^gnome2 = true$/;"	m
host	Makefile	/^host = x86_64-unknown-linux-gnu$/;"	m
host_alias	Makefile	/^host_alias = $/;"	m
host_cpu	Makefile	/^host_cpu = x86_64$/;"	m
host_os	Makefile	/^host_os = linux-gnu$/;"	m
host_vendor	Makefile	/^host_vendor = unknown$/;"	m
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
install_sh	Makefile	/^install_sh = ${SHELL} \/usr\/home\/yilong\/vimplugs\/packages\/cscope-15.8a\/install-sh$/;"	m
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mkdir_p	Makefile	/^mkdir_p = \/bin\/mkdir -p$/;"	m
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
psdir	Makefile	/^psdir = ${docdir}$/;"	m
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
srcdir	Makefile	/^srcdir = .$/;"	m
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
target_alias	Makefile	/^target_alias = $/;"	m
top_build_prefix	Makefile	/^top_build_prefix = ..\/$/;"	m
top_builddir	Makefile	/^top_builddir = ..$/;"	m
top_srcdir	Makefile	/^top_srcdir = ..$/;"	m
GNOMECFLAGS	Makefile	/^GNOMECFLAGS = `gnome-config --cflags gnomeui applets libglade`$/;"	m
GNOMELINKAGE	Makefile	/^GNOMELINKAGE = `gnome-config --libs gnomeui applets libglade|sed -e 's\/-lz \/\/'`	$/;"	m
LEXER_SOURCE	Makefile	/^LEXER_SOURCE = fscanner.l$/;"	m
cscope_SOURCES	Makefile	/^cscope_SOURCES = $(LEXER_SOURCE) egrep.y alloc.c alloc.h basename.c build.c \\$/;"	m
EXTRA_cscope_SOURCES	Makefile	/^EXTRA_cscope_SOURCES = scanner.l fscanner.l$/;"	m
cscope_LDADD	Makefile	/^cscope_LDADD = $(CURSES_LIBS) $(LEXLIB) $(LIBOBJS)$/;"	m
AM_CPPFLAGS	Makefile	/^AM_CPPFLAGS = $(CURSES_INCLUDEDIR)$/;"	m
CLEANFILES	Makefile	/^CLEANFILES = scanner.c fscanner.c egrep.c$/;"	m
EXTRA_DIST	Makefile	/^EXTRA_DIST = emacs.e gmacs.ml$/;"	m
GNOME_SWITCH	Makefile	/^GNOME_SWITCH = -DUSING_GNOME_UI$/;"	m
gscope_CFLAGS	Makefile	/^gscope_CFLAGS = $(GNOMECFLAGS) $(GNOME_SWITCH)$/;"	m
gscope_LDADD	Makefile	/^gscope_LDADD = $(CURSES_LIBS) $(LEXLIB)$/;"	m
gscope_SOURCES	Makefile	/^gscope_SOURCES = gscope.c $(cscope_SOURCES)$/;"	m
gscope_LDFLAGS	Makefile	/^gscope_LDFLAGS = $(GNOMELINKAGE) $(GNOME_LINUX_FLAG)$/;"	m
OURBUFSIZ	logdir.c	46;"	d	file:
rcsid	logdir.c	/^static char const rcsid[] = "$Id: logdir.c,v 1.5 2002\/07\/28 15:40:07 broeker Exp $";$/;"	v	file:
line	logdir.c	/^static char line[OURBUFSIZ+1];$/;"	v	file:
nextfield	logdir.c	/^static	char	*nextfield(char *p);$/;"	p	file:	signature:(char *p)
nextfield	logdir.c	/^nextfield(char *p)$/;"	f	file:	signature:(char *p)
logdir	logdir.c	/^logdir(char *name)$/;"	f	signature:(char *name)
CSCOPE_VP_H	vp.h	43;"	d
MAXPATH	vp.h	45;"	d
HAVE_FCNTL_H	vp.h	50;"	d
MAXDIR	vp.h	62;"	d
DIRLEN	vp.h	63;"	d
vpinit	vp.h	/^void	vpinit(char *current_dir);$/;"	p	signature:(char *current_dir)
vpopen	vp.h	/^int	vpopen(char *path, int oflag);$/;"	p	signature:(char *path, int oflag)
vpaccess	vp.h	/^int	vpaccess(char *path, mode_t amode);$/;"	p	signature:(char *path, mode_t amode)
rcsid	input.c	/^static char const rcsid[] = "$Id: input.c,v 1.15 2006\/08\/20 15:00:34 broeker Exp $";$/;"	v	file:
env	input.c	/^static	jmp_buf	env;		\/* setjmp\/longjmp buffer *\/$/;"	v	file:
prevchar	input.c	/^static	int	prevchar;	\/* previous, ungotten character *\/$/;"	v	file:
catchint	input.c	/^static RETSIGTYPE catchint(int sig);$/;"	p	file:	signature:(int sig)
catchint	input.c	/^catchint(int sig)$/;"	f	file:	signature:(int sig)
myungetch	input.c	/^myungetch(int c)$/;"	f	signature:(int c)
mygetch	input.c	/^mygetch(void)$/;"	f	signature:(void)
mygetline	input.c	/^mygetline(char p[], char s[], unsigned size, int firstchar, BOOL iscaseless)$/;"	f	signature:(char p[], char s[], unsigned size, int firstchar, BOOL iscaseless)
askforchar	input.c	/^askforchar(void)$/;"	f	signature:(void)
askforreturn	input.c	/^askforreturn(void)$/;"	f	signature:(void)
shellpath	input.c	/^shellpath(char *out, int limit, char *in) $/;"	f	signature:(char *out, int limit, char *in)
CSCOPE_LOOKUP_H	lookup.h	37;"	d
rcsid	compath.c	/^static char const rcsid[] = "$Id: compath.c,v 1.3 2001\/07\/05 14:31:00 broeker Exp $";$/;"	v	file:
NULL	compath.c	52;"	d	file:
compath	compath.c	/^compath(char *pathname)			\/*FDEF*\/$/;"	f	signature:(char *pathname)
rcsid	vpinit.c	/^static char const rcsid[] = "$Id: vpinit.c,v 1.8 2006\/07\/23 20:59:20 broeker Exp $";$/;"	v	file:
vpdirs	vpinit.c	/^char	**vpdirs;	\/* directories (including current) in view path *\/$/;"	v
vpdirs	vpinit.c	/^char	vpdirs[MAXDIR][DIRLEN + 1];$/;"	v
MAXVPATH	vpinit.c	51;"	d	file:
vpndirs	vpinit.c	/^int	vpndirs;	\/* number of directories in view path *\/$/;"	v
vpinit	vpinit.c	/^vpinit(char *current_dir)$/;"	f	signature:(char *current_dir)
YYBISON	egrep.c	45;"	d	file:
YYBISON_VERSION	egrep.c	48;"	d	file:
YYSKELETON_NAME	egrep.c	51;"	d	file:
YYPURE	egrep.c	54;"	d	file:
YYPUSH	egrep.c	57;"	d	file:
YYPULL	egrep.c	60;"	d	file:
YYLSP_NEEDED	egrep.c	63;"	d	file:
nextch	egrep.c	119;"	d	file:
MAXLIN	egrep.c	121;"	d	file:
MAXPOS	egrep.c	122;"	d	file:
NCHARS	egrep.c	123;"	d	file:
NSTATES	egrep.c	124;"	d	file:
FINAL	egrep.c	125;"	d	file:
gotofn	egrep.c	/^static	char gotofn[NSTATES][NCHARS];$/;"	v	file:
state	egrep.c	/^static	int state[NSTATES];$/;"	v	file:
out	egrep.c	/^static	char out[NSTATES];$/;"	v	file:
line	egrep.c	/^static	unsigned int line;$/;"	v	file:
name	egrep.c	/^static	int name[MAXLIN];$/;"	v	file:
left	egrep.c	/^static	unsigned int left[MAXLIN];$/;"	v	file:
right	egrep.c	/^static	unsigned int right[MAXLIN];$/;"	v	file:
parent	egrep.c	/^static	unsigned int parent[MAXLIN];$/;"	v	file:
foll	egrep.c	/^static	int foll[MAXLIN];$/;"	v	file:
positions	egrep.c	/^static	int positions[MAXPOS];$/;"	v	file:
chars	egrep.c	/^static	char chars[MAXLIN];$/;"	v	file:
nxtpos	egrep.c	/^static	int nxtpos;$/;"	v	file:
nxtchar	egrep.c	/^static	int nxtchar;$/;"	v	file:
tmpstat	egrep.c	/^static	int tmpstat[MAXLIN];$/;"	v	file:
initstat	egrep.c	/^static	int initstat[MAXLIN];$/;"	v	file:
xstate	egrep.c	/^static	int xstate;$/;"	v	file:
count	egrep.c	/^static	int count;$/;"	v	file:
icount	egrep.c	/^static	int icount;$/;"	v	file:
input	egrep.c	/^static	char *input;$/;"	v	file:
lnum	egrep.c	/^static	long lnum;$/;"	v	file:
iflag	egrep.c	/^static	int iflag;$/;"	v	file:
env	egrep.c	/^static	jmp_buf	env;	\/* setjmp\/longjmp buffer *\/$/;"	v	file:
message	egrep.c	/^static	char *message;	\/* error message *\/$/;"	v	file:
cfoll	egrep.c	/^static	void cfoll(int v);$/;"	p	file:	signature:(int v)
cgotofn	egrep.c	/^static	void cgotofn(void);$/;"	p	file:	signature:(void)
cstate	egrep.c	/^static	int cstate(int v);$/;"	p	file:	signature:(int v)
member	egrep.c	/^static	int member(int symb, int set, int torf);$/;"	p	file:	signature:(int symb, int set, int torf)
notin	egrep.c	/^static	int notin(int n);$/;"	p	file:	signature:(int n)
synerror	egrep.c	/^static	void synerror(void);$/;"	p	file:	signature:(void)
overflo	egrep.c	/^static	void overflo(void);$/;"	p	file:	signature:(void)
add	egrep.c	/^static	void add(int *array, int n);$/;"	p	file:	signature:(int *array, int n)
follow	egrep.c	/^static	void follow(unsigned int v);$/;"	p	file:	signature:(unsigned int v)
unary	egrep.c	/^static	int unary(int x, int d);$/;"	p	file:	signature:(int x, int d)
node	egrep.c	/^static	int node(int x, int l, int r);$/;"	p	file:	signature:(int x, int l, int r)
cclenter	egrep.c	/^static	unsigned int cclenter(int x);$/;"	p	file:	signature:(int x)
enter	egrep.c	/^static	unsigned int enter(int x);$/;"	p	file:	signature:(int x)
yylex	egrep.c	/^static int yylex(void);$/;"	p	file:	signature:(void)
yyerror	egrep.c	/^static int yyerror(char *);$/;"	p	file:	signature:(char *)
YYDEBUG	egrep.c	174;"	d	file:
YYERROR_VERBOSE	egrep.c	179;"	d	file:
YYERROR_VERBOSE	egrep.c	180;"	d	file:
YYERROR_VERBOSE	egrep.c	182;"	d	file:
YYTOKEN_TABLE	egrep.c	187;"	d	file:
YYTOKENTYPE	egrep.c	193;"	d	file:
yytokentype	egrep.c	/^   enum yytokentype {$/;"	g	file:
CHAR	egrep.c	/^     CHAR = 258,$/;"	e	enum:yytokentype	file:
DOT	egrep.c	/^     DOT = 259,$/;"	e	enum:yytokentype	file:
CCL	egrep.c	/^     CCL = 260,$/;"	e	enum:yytokentype	file:
NCCL	egrep.c	/^     NCCL = 261,$/;"	e	enum:yytokentype	file:
OR	egrep.c	/^     OR = 262,$/;"	e	enum:yytokentype	file:
CAT	egrep.c	/^     CAT = 263,$/;"	e	enum:yytokentype	file:
STAR	egrep.c	/^     STAR = 264,$/;"	e	enum:yytokentype	file:
PLUS	egrep.c	/^     PLUS = 265,$/;"	e	enum:yytokentype	file:
QUEST	egrep.c	/^     QUEST = 266$/;"	e	enum:yytokentype	file:
CHAR	egrep.c	209;"	d	file:
DOT	egrep.c	210;"	d	file:
CCL	egrep.c	211;"	d	file:
NCCL	egrep.c	212;"	d	file:
OR	egrep.c	213;"	d	file:
CAT	egrep.c	214;"	d	file:
STAR	egrep.c	215;"	d	file:
PLUS	egrep.c	216;"	d	file:
QUEST	egrep.c	217;"	d	file:
YYSTYPE	egrep.c	/^typedef int YYSTYPE;$/;"	t	file:
YYSTYPE_IS_TRIVIAL	egrep.c	224;"	d	file:
yystype	egrep.c	225;"	d	file:
YYSTYPE_IS_DECLARED	egrep.c	226;"	d	file:
short	egrep.c	237;"	d	file:
yytype_uint8	egrep.c	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	egrep.c	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yytype_int8	egrep.c	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	egrep.c	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_int8	egrep.c	/^typedef short int yytype_int8;$/;"	t	file:
yytype_uint16	egrep.c	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	egrep.c	/^typedef unsigned short int yytype_uint16;$/;"	t	file:
yytype_int16	egrep.c	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	egrep.c	/^typedef short int yytype_int16;$/;"	t	file:
YYSIZE_T	egrep.c	269;"	d	file:
YYSIZE_T	egrep.c	271;"	d	file:
YYSIZE_T	egrep.c	275;"	d	file:
YYSIZE_T	egrep.c	277;"	d	file:
YYSIZE_MAXIMUM	egrep.c	281;"	d	file:
YY_	egrep.c	287;"	d	file:
YY_	egrep.c	291;"	d	file:
YYUSE	egrep.c	297;"	d	file:
YYUSE	egrep.c	299;"	d	file:
YYID	egrep.c	304;"	d	file:
YYID	egrep.c	/^YYID (int yyi)$/;"	f	file:	signature:(int yyi)
YYSTACK_ALLOC	egrep.c	327;"	d	file:
YYSTACK_ALLOC	egrep.c	331;"	d	file:
alloca	egrep.c	334;"	d	file:
YYSTACK_ALLOC	egrep.c	336;"	d	file:
_STDLIB_H	egrep.c	341;"	d	file:
YYSTACK_FREE	egrep.c	350;"	d	file:
YYSTACK_ALLOC_MAXIMUM	egrep.c	356;"	d	file:
YYSTACK_ALLOC	egrep.c	359;"	d	file:
YYSTACK_FREE	egrep.c	360;"	d	file:
YYSTACK_ALLOC_MAXIMUM	egrep.c	362;"	d	file:
_STDLIB_H	egrep.c	369;"	d	file:
YYMALLOC	egrep.c	373;"	d	file:
malloc	egrep.c	/^void *malloc (YYSIZE_T); \/* INFRINGES ON USER NAME SPACE *\/$/;"	p	file:
YYFREE	egrep.c	380;"	d	file:
free	egrep.c	/^void free (void *); \/* INFRINGES ON USER NAME SPACE *\/$/;"	p	file:	signature:(void *)
yyalloc	egrep.c	/^union yyalloc$/;"	u	file:
yyss_alloc	egrep.c	/^  yytype_int16 yyss_alloc;$/;"	m	union:yyalloc	file:	access:public
yyalloc::yyss_alloc	egrep.c	/^  yytype_int16 yyss_alloc;$/;"	m	union:yyalloc	file:	access:public
yyvs_alloc	egrep.c	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	file:	access:public
yyalloc::yyvs_alloc	egrep.c	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	file:	access:public
YYSTACK_GAP_MAXIMUM	egrep.c	402;"	d	file:
YYSTACK_BYTES	egrep.c	406;"	d	file:
YYCOPY	egrep.c	414;"	d	file:
YYCOPY	egrep.c	417;"	d	file:
YYSTACK_RELOCATE	egrep.c	433;"	d	file:
YYFINAL	egrep.c	447;"	d	file:
YYLAST	egrep.c	449;"	d	file:
YYNTOKENS	egrep.c	452;"	d	file:
YYNNTS	egrep.c	454;"	d	file:
YYNRULES	egrep.c	456;"	d	file:
YYNSTATES	egrep.c	458;"	d	file:
YYUNDEFTOK	egrep.c	461;"	d	file:
YYMAXUTOK	egrep.c	462;"	d	file:
YYTRANSLATE	egrep.c	464;"	d	file:
yytranslate	egrep.c	/^static const yytype_uint8 yytranslate[] =$/;"	v	file:
yyprhs	egrep.c	/^static const yytype_uint8 yyprhs[] =$/;"	v	file:
yyrhs	egrep.c	/^static const yytype_int8 yyrhs[] =$/;"	v	file:
yyrline	egrep.c	/^static const yytype_uint8 yyrline[] =$/;"	v	file:
yytname	egrep.c	/^static const char *const yytname[] =$/;"	v	file:
yytoknum	egrep.c	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yyr1	egrep.c	/^static const yytype_uint8 yyr1[] =$/;"	v	file:
yyr2	egrep.c	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yydefact	egrep.c	/^static const yytype_uint8 yydefact[] =$/;"	v	file:
yydefgoto	egrep.c	/^static const yytype_int8 yydefgoto[] =$/;"	v	file:
YYPACT_NINF	egrep.c	580;"	d	file:
yypact	egrep.c	/^static const yytype_int8 yypact[] =$/;"	v	file:
yypgoto	egrep.c	/^static const yytype_int8 yypgoto[] =$/;"	v	file:
YYTABLE_NINF	egrep.c	598;"	d	file:
yytable	egrep.c	/^static const yytype_int8 yytable[] =$/;"	v	file:
yycheck	egrep.c	/^static const yytype_int8 yycheck[] =$/;"	v	file:
yystos	egrep.c	/^static const yytype_uint8 yystos[] =$/;"	v	file:
yyerrok	egrep.c	638;"	d	file:
yyclearin	egrep.c	639;"	d	file:
YYEMPTY	egrep.c	640;"	d	file:
YYEOF	egrep.c	641;"	d	file:
YYACCEPT	egrep.c	643;"	d	file:
YYABORT	egrep.c	644;"	d	file:
YYERROR	egrep.c	645;"	d	file:
YYFAIL	egrep.c	655;"	d	file:
YYRECOVERING	egrep.c	663;"	d	file:
YYBACKUP	egrep.c	665;"	d	file:
YYTERROR	egrep.c	683;"	d	file:
YYERRCODE	egrep.c	684;"	d	file:
YYRHSLOC	egrep.c	691;"	d	file:
YYLLOC_DEFAULT	egrep.c	693;"	d	file:
YY_LOCATION_PRINT	egrep.c	719;"	d	file:
YY_LOCATION_PRINT	egrep.c	724;"	d	file:
YYLEX	egrep.c	732;"	d	file:
YYLEX	egrep.c	734;"	d	file:
YYFPRINTF	egrep.c	742;"	d	file:
YYDPRINTF	egrep.c	745;"	d	file:
YY_SYMBOL_PRINT	egrep.c	751;"	d	file:
yy_symbol_value_print	egrep.c	/^yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:	signature:(FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
yy_symbol_print	egrep.c	/^yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:	signature:(FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
yy_stack_print	egrep.c	/^yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)$/;"	f	file:	signature:(yytype_int16 *yybottom, yytype_int16 *yytop)
YY_STACK_PRINT	egrep.c	846;"	d	file:
yy_reduce_print	egrep.c	/^yy_reduce_print (YYSTYPE *yyvsp, int yyrule)$/;"	f	file:	signature:(YYSTYPE *yyvsp, int yyrule)
YY_REDUCE_PRINT	egrep.c	884;"	d	file:
yydebug	egrep.c	/^int yydebug;$/;"	v
YYDPRINTF	egrep.c	894;"	d	file:
YY_SYMBOL_PRINT	egrep.c	895;"	d	file:
YY_STACK_PRINT	egrep.c	896;"	d	file:
YY_REDUCE_PRINT	egrep.c	897;"	d	file:
YYINITDEPTH	egrep.c	903;"	d	file:
YYMAXDEPTH	egrep.c	914;"	d	file:
yystrlen	egrep.c	923;"	d	file:
yystrlen	egrep.c	/^yystrlen (const char *yystr)$/;"	f	file:	signature:(const char *yystr)
yystpcpy	egrep.c	946;"	d	file:
yystpcpy	egrep.c	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:	signature:(char *yydest, const char *yysrc)
yytnamerr	egrep.c	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:	signature:(char *yyres, const char *yystr)
yysyntax_error	egrep.c	/^yysyntax_error (char *yyresult, int yystate, int yychar)$/;"	f	file:	signature:(char *yyresult, int yystate, int yychar)
yydestruct	egrep.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)$/;"	f	file:	signature:(const char *yymsg, int yytype, YYSTYPE *yyvaluep)
yyparse	egrep.c	/^int yyparse (void *YYPARSE_PARAM);$/;"	p	file:	signature:(void *YYPARSE_PARAM)
yyparse	egrep.c	/^int yyparse ();$/;"	p	file:
yyparse	egrep.c	/^int yyparse (void);$/;"	p	file:	signature:(void)
yyparse	egrep.c	/^int yyparse ();$/;"	p	file:
yychar	egrep.c	/^int yychar;$/;"	v
yylval	egrep.c	/^YYSTYPE yylval;$/;"	v
yynerrs	egrep.c	/^int yynerrs;$/;"	v
yyparse	egrep.c	/^yyparse (void *YYPARSE_PARAM)$/;"	f	signature:(void *YYPARSE_PARAM)
YYPOPSTACK	egrep.c	1254;"	d	file:
yyerror	egrep.c	/^yyerror(char *s)$/;"	f	file:	signature:(char *s)
yylex	egrep.c	/^yylex(void)$/;"	f	file:	signature:(void)
synerror	egrep.c	/^synerror(void)$/;"	f	file:	signature:(void)
enter	egrep.c	/^enter(int x)$/;"	f	file:	signature:(int x)
cclenter	egrep.c	/^cclenter(int x)$/;"	f	file:	signature:(int x)
node	egrep.c	/^node(int x, int l, int r)$/;"	f	file:	signature:(int x, int l, int r)
unary	egrep.c	/^unary(int x, int d)$/;"	f	file:	signature:(int x, int d)
overflo	egrep.c	/^overflo(void)$/;"	f	file:	signature:(void)
cfoll	egrep.c	/^cfoll(int v)$/;"	f	file:	signature:(int v)
cgotofn	egrep.c	/^cgotofn(void)$/;"	f	file:	signature:(void)
cstate	egrep.c	/^cstate(int v)$/;"	f	file:	signature:(int v)
member	egrep.c	/^member(int symb, int set, int torf)$/;"	f	file:	signature:(int symb, int set, int torf)
notin	egrep.c	/^notin(int n)$/;"	f	file:	signature:(int n)
add	egrep.c	/^add(int *array, int n)$/;"	f	file:	signature:(int *array, int n)
follow	egrep.c	/^follow(unsigned int v)$/;"	f	file:	signature:(unsigned int v)
egrepinit	egrep.c	/^egrepinit(char *egreppat)$/;"	f	signature:(char *egreppat)
egrep	egrep.c	/^egrep(char *file, FILE *output, char *format)$/;"	f	signature:(char *file, FILE *output, char *format)
memset	egrep.c	/^memset(char *sp, char c, int n)$/;"	f	signature:(char *sp, char c, int n)
egrepcaseless	egrep.c	/^egrepcaseless(int i)$/;"	f	signature:(int i)
rcsid	edit.c	/^static char const rcsid[] = "$Id: edit.c,v 1.7 2009\/04\/10 13:39:23 broeker Exp $";$/;"	v	file:
editref	edit.c	/^editref(int i)$/;"	f	signature:(int i)
editall	edit.c	/^editall(void)$/;"	f	signature:(void)
edit	edit.c	/^edit(char *file, char *linenum)$/;"	f	signature:(char *file, char *linenum)
filepath	edit.c	/^filepath(char *file)$/;"	f	signature:(char *file)
YY_INT_ALIGNED	scanner.c	4;"	d	file:
FLEX_SCANNER	scanner.c	8;"	d	file:
YY_FLEX_MAJOR_VERSION	scanner.c	9;"	d	file:
YY_FLEX_MINOR_VERSION	scanner.c	10;"	d	file:
YY_FLEX_SUBMINOR_VERSION	scanner.c	11;"	d	file:
FLEX_BETA	scanner.c	13;"	d	file:
FLEXINT_H	scanner.c	29;"	d	file:
__STDC_LIMIT_MACROS	scanner.c	39;"	d	file:
flex_int8_t	scanner.c	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_uint8_t	scanner.c	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_int16_t	scanner.c	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_uint16_t	scanner.c	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_int32_t	scanner.c	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_uint32_t	scanner.c	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_int8_t	scanner.c	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_int16_t	scanner.c	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int32_t	scanner.c	/^typedef int flex_int32_t;$/;"	t	file:
flex_uint8_t	scanner.c	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
flex_uint16_t	scanner.c	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint32_t	scanner.c	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
INT8_MIN	scanner.c	60;"	d	file:
INT16_MIN	scanner.c	63;"	d	file:
INT32_MIN	scanner.c	66;"	d	file:
INT8_MAX	scanner.c	69;"	d	file:
INT16_MAX	scanner.c	72;"	d	file:
INT32_MAX	scanner.c	75;"	d	file:
UINT8_MAX	scanner.c	78;"	d	file:
UINT16_MAX	scanner.c	81;"	d	file:
UINT32_MAX	scanner.c	84;"	d	file:
YY_USE_CONST	scanner.c	92;"	d	file:
YY_USE_CONST	scanner.c	99;"	d	file:
yyconst	scanner.c	105;"	d	file:
yyconst	scanner.c	107;"	d	file:
YY_NULL	scanner.c	111;"	d	file:
YY_SC_TO_UI	scanner.c	118;"	d	file:
BEGIN	scanner.c	124;"	d	file:
YY_START	scanner.c	130;"	d	file:
YYSTATE	scanner.c	131;"	d	file:
YY_STATE_EOF	scanner.c	134;"	d	file:
YY_NEW_FILE	scanner.c	137;"	d	file:
YY_END_OF_BUFFER_CHAR	scanner.c	139;"	d	file:
YY_BUF_SIZE	scanner.c	143;"	d	file:
YY_STATE_BUF_SIZE	scanner.c	148;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	scanner.c	151;"	d	file:
YY_BUFFER_STATE	scanner.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
EOB_ACT_CONTINUE_SCAN	scanner.c	159;"	d	file:
EOB_ACT_END_OF_FILE	scanner.c	160;"	d	file:
EOB_ACT_LAST_MATCH	scanner.c	161;"	d	file:
YY_LESS_LINENO	scanner.c	163;"	d	file:
yyless	scanner.c	166;"	d	file:
unput	scanner.c	179;"	d	file:
YY_TYPEDEF_YY_SIZE_T	scanner.c	182;"	d	file:
yy_size_t	scanner.c	/^typedef size_t yy_size_t;$/;"	t	file:
YY_STRUCT_YY_BUFFER_STATE	scanner.c	187;"	d	file:
yy_buffer_state	scanner.c	/^struct yy_buffer_state$/;"	s	file:
yy_input_file	scanner.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_input_file	scanner.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_ch_buf	scanner.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_ch_buf	scanner.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buf_pos	scanner.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_buf_pos	scanner.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buf_size	scanner.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_buf_size	scanner.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_n_chars	scanner.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_n_chars	scanner.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_is_our_buffer	scanner.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_is_our_buffer	scanner.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_is_interactive	scanner.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_is_interactive	scanner.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_at_bol	scanner.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_at_bol	scanner.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_bs_lineno	scanner.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_bs_lineno	scanner.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_bs_column	scanner.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_bs_column	scanner.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_fill_buffer	scanner.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_fill_buffer	scanner.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_status	scanner.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_buffer_status	scanner.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:	access:public
YY_BUFFER_NEW	scanner.c	234;"	d	file:
YY_BUFFER_NORMAL	scanner.c	235;"	d	file:
YY_BUFFER_EOF_PENDING	scanner.c	246;"	d	file:
yy_buffer_stack_top	scanner.c	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	file:
yy_buffer_stack_max	scanner.c	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	file:
yy_buffer_stack	scanner.c	/^static YY_BUFFER_STATE * yy_buffer_stack = 0; \/**< Stack as an array. *\/$/;"	v	file:
YY_CURRENT_BUFFER	scanner.c	262;"	d	file:
YY_CURRENT_BUFFER_LVALUE	scanner.c	269;"	d	file:
yy_hold_char	scanner.c	/^static char yy_hold_char;$/;"	v	file:
yy_n_chars	scanner.c	/^static int yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yyleng	scanner.c	/^int yyleng;$/;"	v
yy_c_buf_p	scanner.c	/^static char *yy_c_buf_p = (char *) 0;$/;"	v	file:
yy_init	scanner.c	/^static int yy_init = 0;		\/* whether we need to initialize *\/$/;"	v	file:
yy_start	scanner.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_did_buffer_switch_on_eof	scanner.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yyrestart	scanner.c	/^void yyrestart (FILE *input_file  );$/;"	p	file:	signature:(FILE *input_file )
yy_switch_to_buffer	scanner.c	/^void yy_switch_to_buffer (YY_BUFFER_STATE new_buffer  );$/;"	p	file:	signature:(YY_BUFFER_STATE new_buffer )
yy_create_buffer	scanner.c	/^YY_BUFFER_STATE yy_create_buffer (FILE *file,int size  );$/;"	p	file:	signature:(FILE *file,int size )
yy_delete_buffer	scanner.c	/^void yy_delete_buffer (YY_BUFFER_STATE b  );$/;"	p	file:	signature:(YY_BUFFER_STATE b )
yy_flush_buffer	scanner.c	/^void yy_flush_buffer (YY_BUFFER_STATE b  );$/;"	p	file:	signature:(YY_BUFFER_STATE b )
yypush_buffer_state	scanner.c	/^void yypush_buffer_state (YY_BUFFER_STATE new_buffer  );$/;"	p	file:	signature:(YY_BUFFER_STATE new_buffer )
yypop_buffer_state	scanner.c	/^void yypop_buffer_state (void );$/;"	p	file:	signature:(void )
yyensure_buffer_stack	scanner.c	/^static void yyensure_buffer_stack (void );$/;"	p	file:	signature:(void )
yy_load_buffer_state	scanner.c	/^static void yy_load_buffer_state (void );$/;"	p	file:	signature:(void )
yy_init_buffer	scanner.c	/^static void yy_init_buffer (YY_BUFFER_STATE b,FILE *file  );$/;"	p	file:	signature:(YY_BUFFER_STATE b,FILE *file )
YY_FLUSH_BUFFER	scanner.c	298;"	d	file:
yy_scan_buffer	scanner.c	/^YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );$/;"	p	file:	signature:(char *base,yy_size_t size )
yy_scan_string	scanner.c	/^YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );$/;"	p	file:	signature:(yyconst char *yy_str )
yy_scan_bytes	scanner.c	/^YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,int len  );$/;"	p	file:	signature:(yyconst char *bytes,int len )
yyalloc	scanner.c	/^void *yyalloc (yy_size_t  );$/;"	p	file:
yyrealloc	scanner.c	/^void *yyrealloc (void *,yy_size_t  );$/;"	p	file:	signature:(void *,yy_size_t )
yyfree	scanner.c	/^void yyfree (void *  );$/;"	p	file:	signature:(void * )
yy_new_buffer	scanner.c	308;"	d	file:
yy_set_interactive	scanner.c	310;"	d	file:
yy_set_bol	scanner.c	320;"	d	file:
YY_AT_BOL	scanner.c	330;"	d	file:
YY_CHAR	scanner.c	/^typedef unsigned char YY_CHAR;$/;"	t	file:
yyin	scanner.c	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yyout	scanner.c	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yy_state_type	scanner.c	/^typedef int yy_state_type;$/;"	t	file:
yylineno	scanner.c	/^int yylineno = 1;$/;"	v
yytext_ptr	scanner.c	345;"	d	file:
yy_get_previous_state	scanner.c	/^static yy_state_type yy_get_previous_state (void );$/;"	p	file:	signature:(void )
yy_try_NUL_trans	scanner.c	/^static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );$/;"	p	file:	signature:(yy_state_type current_state )
yy_get_next_buffer	scanner.c	/^static int yy_get_next_buffer (void );$/;"	p	file:	signature:(void )
yy_fatal_error	scanner.c	/^static void yy_fatal_error (yyconst char msg[]  );$/;"	p	file:	signature:(yyconst char msg[] )
YY_DO_BEFORE_ACTION	scanner.c	355;"	d	file:
YY_NUM_RULES	scanner.c	363;"	d	file:
YY_END_OF_BUFFER	scanner.c	364;"	d	file:
yy_trans_info	scanner.c	/^struct yy_trans_info$/;"	s	file:
yy_verify	scanner.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:	access:public
yy_trans_info::yy_verify	scanner.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:	access:public
yy_nxt	scanner.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:	access:public
yy_trans_info::yy_nxt	scanner.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:	access:public
yy_acclist	scanner.c	/^static yyconst flex_int16_t yy_acclist[267] =$/;"	v	file:
yy_accept	scanner.c	/^static yyconst flex_int16_t yy_accept[153] =$/;"	v	file:
yy_ec	scanner.c	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	file:
yy_meta	scanner.c	/^static yyconst flex_int32_t yy_meta[55] =$/;"	v	file:
yy_base	scanner.c	/^static yyconst flex_int16_t yy_base[169] =$/;"	v	file:
yy_def	scanner.c	/^static yyconst flex_int16_t yy_def[169] =$/;"	v	file:
yy_nxt	scanner.c	/^static yyconst flex_int16_t yy_nxt[868] =$/;"	v	file:
yy_chk	scanner.c	/^static yyconst flex_int16_t yy_chk[868] =$/;"	v	file:
yy_flex_debug	scanner.c	/^int yy_flex_debug = 0;$/;"	v
yy_state_buf	scanner.c	/^static yy_state_type *yy_state_buf=0, *yy_state_ptr=0;$/;"	v	file:
yy_state_ptr	scanner.c	/^static yy_state_type *yy_state_buf=0, *yy_state_ptr=0;$/;"	v	file:
yy_full_match	scanner.c	/^static char *yy_full_match;$/;"	v	file:
yy_lp	scanner.c	/^static int yy_lp;$/;"	v	file:
yy_looking_for_trail_begin	scanner.c	/^static int yy_looking_for_trail_begin = 0;$/;"	v	file:
yy_full_lp	scanner.c	/^static int yy_full_lp;$/;"	v	file:
yy_full_state	scanner.c	/^static int *yy_full_state;$/;"	v	file:
YY_TRAILING_MASK	scanner.c	719;"	d	file:
YY_TRAILING_HEAD_MASK	scanner.c	720;"	d	file:
REJECT	scanner.c	721;"	d	file:
yy_more_flag	scanner.c	/^static int yy_more_flag = 0;$/;"	v	file:
yy_more_len	scanner.c	/^static int yy_more_len = 0;$/;"	v	file:
yymore	scanner.c	734;"	d	file:
YY_MORE_ADJ	scanner.c	735;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	scanner.c	736;"	d	file:
yytext	scanner.c	/^char *yytext;$/;"	v
IFLEVELINC	scanner.c	783;"	d	file:
rcsid	scanner.c	/^static char const rcsid[] = "$Id: scanner.l,v 1.10 2011\/06\/29 15:48:00 nhorman Exp $";$/;"	v	file:
first	scanner.c	/^int	first;	\/* buffer index for first char of symbol *\/$/;"	v
last	scanner.c	/^int	last;	\/* buffer index for last char of symbol *\/$/;"	v
lineno	scanner.c	/^int	lineno;	\/* symbol line number *\/$/;"	v
myylineno	scanner.c	/^int	myylineno = 1;$/;"	v
arraydimension	scanner.c	/^static	BOOL	arraydimension;		\/* inside array dimension declaration *\/$/;"	v	file:
bplisting	scanner.c	/^static	BOOL	bplisting;		\/* breakpoint listing *\/$/;"	v	file:
braces	scanner.c	/^static	int	braces;			\/* unmatched left brace count *\/$/;"	v	file:
classdef	scanner.c	/^static	BOOL	classdef;		\/* c++ class definition *\/$/;"	v	file:
elseelif	scanner.c	/^static	BOOL	elseelif;		\/* #else or #elif found *\/$/;"	v	file:
esudef	scanner.c	/^static	BOOL	esudef;			\/* enum\/struct\/union global definition *\/$/;"	v	file:
external	scanner.c	/^static	BOOL	external;		\/* external definition *\/$/;"	v	file:
externalbraces	scanner.c	/^static	int	externalbraces;		\/* external definition outer brace count *\/$/;"	v	file:
fcndef	scanner.c	/^static	BOOL	fcndef;			\/* function definition *\/$/;"	v	file:
global	scanner.c	/^static	BOOL	global;			\/* file global scope (outside functions) *\/$/;"	v	file:
iflevel	scanner.c	/^static	int	iflevel;		\/* #if nesting level *\/$/;"	v	file:
initializer	scanner.c	/^static	BOOL	initializer;		\/* data initializer *\/$/;"	v	file:
initializerbraces	scanner.c	/^static	int	initializerbraces;	\/* data initializer outer brace count *\/$/;"	v	file:
lex	scanner.c	/^static	BOOL	lex;			\/* lex file *\/$/;"	v	file:
miflevel	scanner.c	/^static	int	miflevel = IFLEVELINC;	\/* maximum #if nesting level *\/$/;"	v	file:
maxifbraces	scanner.c	/^static	int	*maxifbraces;		\/* maximum brace count within #if *\/$/;"	v	file:
preifbraces	scanner.c	/^static	int	*preifbraces;		\/* brace count before #if *\/$/;"	v	file:
parens	scanner.c	/^static	int	parens;			\/* unmatched left parenthesis count *\/$/;"	v	file:
ppdefine	scanner.c	/^static	BOOL	ppdefine;		\/* preprocessor define statement *\/$/;"	v	file:
pseudoelif	scanner.c	/^static	BOOL	pseudoelif;		\/* pseudo-#elif *\/$/;"	v	file:
oldtype	scanner.c	/^static	BOOL	oldtype;		\/* next identifier is an old type *\/$/;"	v	file:
rules	scanner.c	/^static	BOOL	rules;			\/* lex\/yacc rules *\/$/;"	v	file:
sdl	scanner.c	/^static	BOOL	sdl;			\/* sdl file *\/$/;"	v	file:
structfield	scanner.c	/^static	BOOL	structfield;		\/* structure field declaration *\/$/;"	v	file:
tagdef	scanner.c	/^static	int	tagdef;			\/* class\/enum\/struct\/union tag definition *\/$/;"	v	file:
template	scanner.c	/^static	BOOL	template;		\/* function template *\/$/;"	v	file:
templateparens	scanner.c	/^static	int	templateparens;		\/* function template outer parentheses count *\/$/;"	v	file:
typedefbraces	scanner.c	/^static	int	typedefbraces = -1;	\/* initial typedef brace count *\/$/;"	v	file:
token	scanner.c	/^static	int	token;			\/* token found *\/$/;"	v	file:
multicharconstant	scanner.c	/^void	multicharconstant(char terminator);$/;"	p	file:	signature:(char terminator)
skipcomment_input	scanner.c	/^int	skipcomment_input(void);$/;"	p	file:	signature:(void)
comment	scanner.c	/^int	comment(void);$/;"	p	file:	signature:(void)
YY_INPUT	scanner.c	828;"	d	file:
input	scanner.c	835;"	d	file:
input	scanner.c	836;"	d	file:
noncommentinput	scanner.c	837;"	d	file:
unput	scanner.c	838;"	d	file:
unput	scanner.c	839;"	d	file:
INITIAL	scanner.c	846;"	d	file:
SDL	scanner.c	847;"	d	file:
YY_EXTRA_TYPE	scanner.c	858;"	d	file:
yy_init_globals	scanner.c	/^static int yy_init_globals (void );$/;"	p	file:	signature:(void )
yylex_destroy	scanner.c	/^int yylex_destroy (void );$/;"	p	file:	signature:(void )
yyget_debug	scanner.c	/^int yyget_debug (void );$/;"	p	file:	signature:(void )
yyset_debug	scanner.c	/^void yyset_debug (int debug_flag  );$/;"	p	file:	signature:(int debug_flag )
yyget_extra	scanner.c	/^YY_EXTRA_TYPE yyget_extra (void );$/;"	p	file:	signature:(void )
yyset_extra	scanner.c	/^void yyset_extra (YY_EXTRA_TYPE user_defined  );$/;"	p	file:	signature:(YY_EXTRA_TYPE user_defined )
yyget_in	scanner.c	/^FILE *yyget_in (void );$/;"	p	file:	signature:(void )
yyset_in	scanner.c	/^void yyset_in  (FILE * in_str  );$/;"	p	file:	signature:(FILE * in_str )
yyget_out	scanner.c	/^FILE *yyget_out (void );$/;"	p	file:	signature:(void )
yyset_out	scanner.c	/^void yyset_out  (FILE * out_str  );$/;"	p	file:	signature:(FILE * out_str )
yyget_leng	scanner.c	/^int yyget_leng (void );$/;"	p	file:	signature:(void )
yyget_text	scanner.c	/^char *yyget_text (void );$/;"	p	file:	signature:(void )
yyget_lineno	scanner.c	/^int yyget_lineno (void );$/;"	p	file:	signature:(void )
yyset_lineno	scanner.c	/^void yyset_lineno (int line_number  );$/;"	p	file:	signature:(int line_number )
yywrap	scanner.c	/^extern "C" int yywrap (void );$/;"	p	file:	signature:(void )
yywrap	scanner.c	/^extern int yywrap (void );$/;"	p	file:	signature:(void )
yyunput	scanner.c	/^    static void yyunput (int c,char *buf_ptr  );$/;"	p	file:	signature:(int c,char *buf_ptr )
yy_flex_strncpy	scanner.c	/^static void yy_flex_strncpy (char *,yyconst char *,int );$/;"	p	file:	signature:(char *,yyconst char *,int )
yy_flex_strlen	scanner.c	/^static int yy_flex_strlen (yyconst char * );$/;"	p	file:	signature:(yyconst char * )
yyinput	scanner.c	/^static int yyinput (void );$/;"	p	file:	signature:(void )
input	scanner.c	/^static int input (void );$/;"	p	file:	signature:(void )
YY_READ_BUF_SIZE	scanner.c	926;"	d	file:
ECHO	scanner.c	934;"	d	file:
YY_INPUT	scanner.c	941;"	d	file:
yyterminate	scanner.c	978;"	d	file:
YY_START_STACK_INCR	scanner.c	983;"	d	file:
YY_FATAL_ERROR	scanner.c	988;"	d	file:
YY_DECL_IS_OURS	scanner.c	997;"	d	file:
yylex	scanner.c	/^extern int yylex (void);$/;"	p	file:	signature:(void)
YY_DECL	scanner.c	1001;"	d	file:
YY_USER_ACTION	scanner.c	1008;"	d	file:
YY_BREAK	scanner.c	1013;"	d	file:
YY_RULE_SETUP	scanner.c	1016;"	d	file:
yy_get_next_buffer	scanner.c	/^static int yy_get_next_buffer (void)$/;"	f	file:	signature:(void)
yy_get_previous_state	scanner.c	/^    static yy_state_type yy_get_previous_state (void)$/;"	f	file:	signature:(void)
yy_try_NUL_trans	scanner.c	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	file:	signature:(yy_state_type yy_current_state )
yyunput	scanner.c	/^    static void yyunput (int c, register char * yy_bp )$/;"	f	file:	signature:(int c, register char * yy_bp )
yyinput	scanner.c	/^    static int yyinput (void)$/;"	f	file:	signature:(void)
yyrestart	scanner.c	/^    void yyrestart  (FILE * input_file )$/;"	f	signature:(FILE * input_file )
yy_switch_to_buffer	scanner.c	/^    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f	signature:(YY_BUFFER_STATE new_buffer )
yy_load_buffer_state	scanner.c	/^static void yy_load_buffer_state  (void)$/;"	f	file:	signature:(void)
yy_create_buffer	scanner.c	/^    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )$/;"	f	signature:(FILE * file, int size )
yy_delete_buffer	scanner.c	/^    void yy_delete_buffer (YY_BUFFER_STATE  b )$/;"	f	signature:(YY_BUFFER_STATE b )
isatty	scanner.c	/^extern int isatty (int );$/;"	p	file:	signature:(int )
yy_init_buffer	scanner.c	/^    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	file:	signature:(YY_BUFFER_STATE b, FILE * file )
yy_flush_buffer	scanner.c	/^    void yy_flush_buffer (YY_BUFFER_STATE  b )$/;"	f	signature:(YY_BUFFER_STATE b )
yypush_buffer_state	scanner.c	/^void yypush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f	signature:(YY_BUFFER_STATE new_buffer )
yypop_buffer_state	scanner.c	/^void yypop_buffer_state (void)$/;"	f	signature:(void)
yyensure_buffer_stack	scanner.c	/^static void yyensure_buffer_stack (void)$/;"	f	file:	signature:(void)
yy_scan_buffer	scanner.c	/^YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )$/;"	f	signature:(char * base, yy_size_t size )
yy_scan_string	scanner.c	/^YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )$/;"	f	signature:(yyconst char * yystr )
yy_scan_bytes	scanner.c	/^YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )$/;"	f	signature:(yyconst char * yybytes, int _yybytes_len )
YY_EXIT_FAILURE	scanner.c	2550;"	d	file:
yy_fatal_error	scanner.c	/^static void yy_fatal_error (yyconst char* msg )$/;"	f	file:	signature:(yyconst char* msg )
yyless	scanner.c	2561;"	d	file:
yyless	scanner.c	2562;"	d	file:
yyget_lineno	scanner.c	/^int yyget_lineno  (void)$/;"	f	signature:(void)
yyget_in	scanner.c	/^FILE *yyget_in  (void)$/;"	f	signature:(void)
yyget_out	scanner.c	/^FILE *yyget_out  (void)$/;"	f	signature:(void)
yyget_leng	scanner.c	/^int yyget_leng  (void)$/;"	f	signature:(void)
yyget_text	scanner.c	/^char *yyget_text  (void)$/;"	f	signature:(void)
yyset_lineno	scanner.c	/^void yyset_lineno (int  line_number )$/;"	f	signature:(int line_number )
yyset_in	scanner.c	/^void yyset_in (FILE *  in_str )$/;"	f	signature:(FILE * in_str )
yyset_out	scanner.c	/^void yyset_out (FILE *  out_str )$/;"	f	signature:(FILE * out_str )
yyget_debug	scanner.c	/^int yyget_debug  (void)$/;"	f	signature:(void)
yyset_debug	scanner.c	/^void yyset_debug (int  bdebug )$/;"	f	signature:(int bdebug )
yy_init_globals	scanner.c	/^static int yy_init_globals (void)$/;"	f	file:	signature:(void)
yylex_destroy	scanner.c	/^int yylex_destroy  (void)$/;"	f	signature:(void)
yy_flex_strncpy	scanner.c	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )$/;"	f	file:	signature:(char* s1, yyconst char * s2, int n )
yy_flex_strlen	scanner.c	/^static int yy_flex_strlen (yyconst char * s )$/;"	f	file:	signature:(yyconst char * s )
yyalloc	scanner.c	/^void *yyalloc (yy_size_t  size )$/;"	f	signature:(yy_size_t size )
yyrealloc	scanner.c	/^void *yyrealloc  (void * ptr, yy_size_t  size )$/;"	f	signature:(void * ptr, yy_size_t size )
yyfree	scanner.c	/^void yyfree (void * ptr )$/;"	f	signature:(void * ptr )
YYTABLES_NAME	scanner.c	2760;"	d	file:
initscanner	scanner.c	/^initscanner(char *srcfile)$/;"	f	signature:(char *srcfile)
skipcomment_input	scanner.c	/^skipcomment_input(void)$/;"	f	signature:(void)
comment_input	scanner.c	/^comment_input(void)$/;"	f	signature:(void)
comment	scanner.c	/^comment(void)$/;"	f	signature:(void)
multicharconstant	scanner.c	/^multicharconstant(char terminator)$/;"	f	signature:(char terminator)
rcsid	vpfopen.c	/^static char const rcsid[] = "$Id: vpfopen.c,v 1.4 2009\/04\/10 13:39:23 broeker Exp $";$/;"	v	file:
vpfopen	vpfopen.c	/^vpfopen(char *filename, char *type)$/;"	f	signature:(char *filename, char *type)
EDITOR	main.c	61;"	d	file:
HOME	main.c	62;"	d	file:
SHELL	main.c	63;"	d	file:
LINEFLAG	main.c	64;"	d	file:
TMPDIR	main.c	65;"	d	file:
DFLT_INCDIR	main.c	67;"	d	file:
rcsid	main.c	/^static char const rcsid[] = "$Id: main.c,v 1.55 2011\/07\/04 13:41:17 nhorman Exp $";$/;"	v	file:
dichar1	main.c	/^char	dichar1[] = " teisaprnl(of)=c";	\/* 16 most frequent first chars *\/$/;"	v
dichar2	main.c	/^char	dichar2[] = " tnerpla";		\/* 8 most frequent second chars $/;"	v
dicode1	main.c	/^char	dicode1[256];		\/* digraph first character code *\/$/;"	v
dicode2	main.c	/^char	dicode2[256];		\/* digraph second character code *\/$/;"	v
editor	main.c	/^char	*editor, *shell, *lineflag;	\/* environment variables *\/$/;"	v
shell	main.c	/^char	*editor, *shell, *lineflag;	\/* environment variables *\/$/;"	v
lineflag	main.c	/^char	*editor, *shell, *lineflag;	\/* environment variables *\/$/;"	v
home	main.c	/^char	*home;			\/* Home directory *\/$/;"	v
lineflagafterfile	main.c	/^BOOL	lineflagafterfile;$/;"	v
argv0	main.c	/^char	*argv0;			\/* command name *\/$/;"	v
compress	main.c	/^BOOL	compress = YES;		\/* compress the characters in the crossref *\/$/;"	v
dbtruncated	main.c	/^BOOL	dbtruncated;		\/* database symbols are truncated to 8 chars *\/$/;"	v
dispcomponents	main.c	/^int	dispcomponents = 1;	\/* file path components to display *\/$/;"	v
displayversion	main.c	/^BOOL	displayversion;		\/* display the C Compilation System version *\/$/;"	v
editallprompt	main.c	/^BOOL	editallprompt = YES;	\/* prompt between editing files *\/$/;"	v
fileargc	main.c	/^unsigned int fileargc;		\/* file argument count *\/$/;"	v
fileargv	main.c	/^char	**fileargv;		\/* file argument values *\/$/;"	v
fileversion	main.c	/^int	fileversion;		\/* cross-reference file version *\/$/;"	v
incurses	main.c	/^BOOL	incurses = NO;		\/* in curses *\/$/;"	v
invertedindex	main.c	/^BOOL	invertedindex;		\/* the database has an inverted index *\/$/;"	v
isuptodate	main.c	/^BOOL	isuptodate;		\/* consider the crossref up-to-date *\/$/;"	v
kernelmode	main.c	/^BOOL	kernelmode;		\/* don't use DFLT_INCDIR - bad for kernels *\/$/;"	v
linemode	main.c	/^BOOL	linemode = NO;		\/* use line oriented user interface *\/$/;"	v
verbosemode	main.c	/^BOOL	verbosemode = NO;	\/* print extra information on line mode *\/$/;"	v
recurse_dir	main.c	/^BOOL	recurse_dir = NO;	\/* recurse dirs when searching for src files *\/$/;"	v
namefile	main.c	/^char	*namefile;		\/* file of file names *\/$/;"	v
ogs	main.c	/^BOOL	ogs;			\/* display OGS book and subsystem names *\/$/;"	v
prependpath	main.c	/^char	*prependpath;		\/* prepend path to file names *\/$/;"	v
refsfound	main.c	/^FILE	*refsfound;		\/* references found file *\/$/;"	v
temp1	main.c	/^char	temp1[PATHLEN + 1];	\/* temporary file name *\/$/;"	v
temp2	main.c	/^char	temp2[PATHLEN + 1];	\/* temporary file name *\/$/;"	v
tempdirpv	main.c	/^char	tempdirpv[PATHLEN + 1];	\/* private temp directory *\/$/;"	v
totalterms	main.c	/^long	totalterms;		\/* total inverted index terms *\/$/;"	v
trun_syms	main.c	/^BOOL	trun_syms;		\/* truncate symbols to 8 characters *\/$/;"	v
tempstring	main.c	/^char	tempstring[TEMPSTRING_LEN + 1]; \/* use this as a buffer, instead of 'yytext', $/;"	v
tmpdir	main.c	/^char	*tmpdir;		\/* temporary directory *\/$/;"	v
onesearch	main.c	/^static	BOOL	onesearch;		\/* one search only in line mode *\/$/;"	v	file:
reflines	main.c	/^static	char	*reflines;		\/* symbol reference lines file *\/$/;"	v	file:
initcompress	main.c	/^static	void	initcompress(void);$/;"	p	file:	signature:(void)
longusage	main.c	/^static	void	longusage(void);$/;"	p	file:	signature:(void)
skiplist	main.c	/^static	void	skiplist(FILE *oldrefs);$/;"	p	file:	signature:(FILE *oldrefs)
usage	main.c	/^static	void	usage(void);$/;"	p	file:	signature:(void)
fixkeypad	main.c	/^void	fixkeypad();$/;"	p	file:
sigwinch_handler	main.c	/^sigwinch_handler(int sig, siginfo_t *info, void *unused)$/;"	f	signature:(int sig, siginfo_t *info, void *unused)
lopts	main.c	/^struct option lopts[] = {$/;"	v	typeref:struct:option
parse_options	main.c	/^char ** parse_options(int *argc, char **argv)$/;"	f	signature:(int *argc, char **argv)
main	main.c	/^main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
cannotopen	main.c	/^cannotopen(char *file)$/;"	f	signature:(char *file)
cannotwrite	main.c	/^cannotwrite(char *file)$/;"	f	signature:(char *file)
initcompress	main.c	/^initcompress(void)$/;"	f	file:	signature:(void)
skiplist	main.c	/^skiplist(FILE *oldrefs)$/;"	f	file:	signature:(FILE *oldrefs)
entercurses	main.c	/^entercurses(void)$/;"	f	signature:(void)
exitcurses	main.c	/^exitcurses(void)$/;"	f	signature:(void)
usage	main.c	/^usage(void)$/;"	f	file:	signature:(void)
longusage	main.c	/^longusage(void)$/;"	f	file:	signature:(void)
myexit	main.c	/^myexit(int sig)$/;"	f	signature:(int sig)
OPENFLAG_READ	vpopen.c	40;"	d	file:
rcsid	vpopen.c	/^static char const rcsid[] = "$Id: vpopen.c,v 1.5 2009\/04\/10 13:39:23 broeker Exp $";$/;"	v	file:
vpopen	vpopen.c	/^vpopen(char *path, int oflag)$/;"	f	signature:(char *path, int oflag)
buildonly	build.c	/^BOOL	buildonly = NO;		\/* only build the database *\/$/;"	v
unconditional	build.c	/^BOOL	unconditional = NO;	\/* unconditionally build database *\/$/;"	v
fileschanged	build.c	/^BOOL	fileschanged;		\/* assume some files changed *\/$/;"	v
invname_buf	build.c	/^char	invname_buf[] = INVNAME;$/;"	v
invpost_buf	build.c	/^char	invpost_buf[] = INVPOST;$/;"	v
reffile_buf	build.c	/^char	reffile_buf[] = REFFILE;$/;"	v
invname	build.c	/^char	*invname = invname_buf;	\/* inverted index to the database *\/$/;"	v
invpost	build.c	/^char	*invpost = invpost_buf;	\/* inverted index postings *\/$/;"	v
reffile	build.c	/^char	*reffile = reffile_buf;	\/* cross-reference file path name *\/$/;"	v
newreffile	build.c	/^char	*newreffile;		\/* new cross-reference file name *\/$/;"	v
newrefs	build.c	/^FILE	*newrefs;		\/* new cross-reference *\/$/;"	v
postings	build.c	/^FILE	*postings;		\/* new inverted index postings *\/$/;"	v
symrefs	build.c	/^int	symrefs = -1;		\/* cross-reference file *\/$/;"	v
invcontrol	build.c	/^INVCONTROL invcontrol;		\/* inverted file control structure *\/$/;"	v
newinvname	build.c	/^static char *newinvname;	\/* new inverted index file name *\/$/;"	v	file:
newinvpost	build.c	/^static char *newinvpost;	\/* new inverted index postings file name *\/$/;"	v	file:
traileroffset	build.c	/^static long traileroffset;	\/* file trailer offset *\/$/;"	v	file:
cannotindex	build.c	/^static	void	cannotindex(void);$/;"	p	file:	signature:(void)
compare	build.c	/^static	int	compare(const void *s1, const void *s2);$/;"	p	file:	signature:(const void *s1, const void *s2)
copydata	build.c	/^static	void	copydata(void);$/;"	p	file:	signature:(void)
copyinverted	build.c	/^static	void	copyinverted(void);$/;"	p	file:	signature:(void)
getoldfile	build.c	/^static	char	*getoldfile(void);$/;"	p	file:	signature:(void)
movefile	build.c	/^static	void	movefile(char *new, char *old);$/;"	p	file:	signature:(char *new, char *old)
putheader	build.c	/^static	void	putheader(char *dir);$/;"	p	file:	signature:(char *dir)
fetch_include_from_dbase	build.c	/^static	void	fetch_include_from_dbase(char *, size_t);$/;"	p	file:	signature:(char *, size_t)
putlist	build.c	/^static	void	putlist(char **names, int count);$/;"	p	file:	signature:(char **names, int count)
samelist	build.c	/^static	BOOL	samelist(FILE *oldrefs, char **names, int count);$/;"	p	file:	signature:(FILE *oldrefs, char **names, int count)
cannotindex	build.c	/^cannotindex(void)$/;"	f	file:	signature:(void)
samelist	build.c	/^samelist(FILE *oldrefs, char **names, int count)$/;"	f	file:	signature:(FILE *oldrefs, char **names, int count)
setup_build_filenames	build.c	/^void setup_build_filenames(char *reffile)$/;"	f	signature:(char *reffile)
opendatabase	build.c	/^opendatabase(void)$/;"	f	signature:(void)
rebuild	build.c	/^rebuild(void)$/;"	f	signature:(void)
build	build.c	/^build(void)$/;"	f	signature:(void)
compare	build.c	/^compare(const void *arg_s1, const void *arg_s2)$/;"	f	file:	signature:(const void *arg_s1, const void *arg_s2)
seek_to_trailer	build.c	/^seek_to_trailer(FILE *f) $/;"	f	signature:(FILE *f)
getoldfile	build.c	/^getoldfile(void)$/;"	f	file:	signature:(void)
free_newbuildfiles	build.c	/^void free_newbuildfiles(void)$/;"	f	signature:(void)
putheader	build.c	/^putheader(char *dir)$/;"	f	file:	signature:(char *dir)
putlist	build.c	/^putlist(char **names, int count)$/;"	f	file:	signature:(char **names, int count)
copydata	build.c	/^copydata(void)$/;"	f	file:	signature:(void)
copyinverted	build.c	/^copyinverted(void)$/;"	f	file:	signature:(void)
movefile	build.c	/^movefile(char *new, char *old)$/;"	f	file:	signature:(char *new, char *old)
fetch_include_from_dbase	build.c	/^fetch_include_from_dbase(char *s, size_t length)$/;"	f	file:	signature:(char *s, size_t length)
rcsid	exec.c	/^static char const rcsid[] = "$Id: exec.c,v 1.12 2009\/04\/10 13:39:23 broeker Exp $";$/;"	v	file:
oldsigquit	exec.c	/^static	sighandler_t oldsigquit; \/* old value of quit signal *\/$/;"	v	file:
oldsighup	exec.c	/^static	sighandler_t oldsighup; \/* old value of hangup signal *\/$/;"	v	file:
oldsigtstp	exec.c	/^static	sighandler_t oldsigtstp; \/* old value of SIGTSTP *\/$/;"	v	file:
join	exec.c	/^static	int	join(pid_t p);$/;"	p	file:	signature:(pid_t p)
myexecvp	exec.c	/^static	int	myexecvp(char *a, char **args);$/;"	p	file:	signature:(char *a, char **args)
myfork	exec.c	/^static	pid_t	myfork(void);$/;"	p	file:	signature:(void)
execute	exec.c	/^execute(char *a, ...)	\/* note: "exec" is already defined on u370 *\/$/;"	f	signature:(char *a, ...)
myexecvp	exec.c	/^myexecvp(char *a, char **args)$/;"	f	file:	signature:(char *a, char **args)
myfork	exec.c	/^myfork(void)$/;"	f	file:	signature:(void)
join	exec.c	/^join(pid_t p) $/;"	f	file:	signature:(pid_t p)
CSCOPE_INVLIB_H	invlib.h	37;"	d
BASE	invlib.h	47;"	d
PRECISION	invlib.h	48;"	d
BASE	invlib.h	51;"	d
PRECISION	invlib.h	52;"	d
INVAVAIL	invlib.h	59;"	d
INVBUSY	invlib.h	60;"	d
INVALONE	invlib.h	61;"	d
BOOL_OR	invlib.h	64;"	d
AND	invlib.h	65;"	d
NOT	invlib.h	66;"	d
REVERSENOT	invlib.h	67;"	d
version	invlib.h	/^	long	version;	\/* inverted index format version *\/$/;"	m	struct:__anon2	access:public
__anon2::version	invlib.h	/^	long	version;	\/* inverted index format version *\/$/;"	m	struct:__anon2	access:public
filestat	invlib.h	/^	long	filestat;	\/* file status word  *\/$/;"	m	struct:__anon2	access:public
__anon2::filestat	invlib.h	/^	long	filestat;	\/* file status word  *\/$/;"	m	struct:__anon2	access:public
sizeblk	invlib.h	/^	long	sizeblk;	\/* size of logical block in bytes *\/$/;"	m	struct:__anon2	access:public
__anon2::sizeblk	invlib.h	/^	long	sizeblk;	\/* size of logical block in bytes *\/$/;"	m	struct:__anon2	access:public
startbyte	invlib.h	/^	long	startbyte;	\/* first byte of superfinger *\/$/;"	m	struct:__anon2	access:public
__anon2::startbyte	invlib.h	/^	long	startbyte;	\/* first byte of superfinger *\/$/;"	m	struct:__anon2	access:public
supsize	invlib.h	/^	long	supsize;	\/* size of superfinger in bytes *\/$/;"	m	struct:__anon2	access:public
__anon2::supsize	invlib.h	/^	long	supsize;	\/* size of superfinger in bytes *\/$/;"	m	struct:__anon2	access:public
cntlsize	invlib.h	/^	long	cntlsize;	\/* size of max cntl space (should be a multiple of BUFSIZ) *\/$/;"	m	struct:__anon2	access:public
__anon2::cntlsize	invlib.h	/^	long	cntlsize;	\/* size of max cntl space (should be a multiple of BUFSIZ) *\/$/;"	m	struct:__anon2	access:public
share	invlib.h	/^	long	share;		\/* flag whether to use shared memory *\/$/;"	m	struct:__anon2	access:public
__anon2::share	invlib.h	/^	long	share;		\/* flag whether to use shared memory *\/$/;"	m	struct:__anon2	access:public
PARAM	invlib.h	/^} PARAM;$/;"	t	typeref:struct:__anon2
invfile	invlib.h	/^	FILE	*invfile;	\/* the inverted file ptr *\/$/;"	m	struct:__anon3	access:public
__anon3::invfile	invlib.h	/^	FILE	*invfile;	\/* the inverted file ptr *\/$/;"	m	struct:__anon3	access:public
postfile	invlib.h	/^	FILE	*postfile;	\/* posting file ptr *\/$/;"	m	struct:__anon3	access:public
__anon3::postfile	invlib.h	/^	FILE	*postfile;	\/* posting file ptr *\/$/;"	m	struct:__anon3	access:public
param	invlib.h	/^	PARAM	param;		\/* control parameters for the file *\/$/;"	m	struct:__anon3	access:public
__anon3::param	invlib.h	/^	PARAM	param;		\/* control parameters for the file *\/$/;"	m	struct:__anon3	access:public
iindex	invlib.h	/^	char	*iindex;	\/* ptr to space for superindex *\/$/;"	m	struct:__anon3	access:public
__anon3::iindex	invlib.h	/^	char	*iindex;	\/* ptr to space for superindex *\/$/;"	m	struct:__anon3	access:public
logblk	invlib.h	/^	union logicalblk *logblk;	\/* ptr to space for a logical block *\/$/;"	m	struct:__anon3	typeref:union:__anon3::logicalblk	access:public
__anon3::logblk	invlib.h	/^	union logicalblk *logblk;	\/* ptr to space for a logical block *\/$/;"	m	struct:__anon3	typeref:union:__anon3::logicalblk	access:public
numblk	invlib.h	/^	long	numblk;		\/* number of block presently at *logblk *\/$/;"	m	struct:__anon3	access:public
__anon3::numblk	invlib.h	/^	long	numblk;		\/* number of block presently at *logblk *\/$/;"	m	struct:__anon3	access:public
keypnt	invlib.h	/^	long	keypnt;		\/* number item in present block found *\/$/;"	m	struct:__anon3	access:public
__anon3::keypnt	invlib.h	/^	long	keypnt;		\/* number item in present block found *\/$/;"	m	struct:__anon3	access:public
INVCONTROL	invlib.h	/^} INVCONTROL;$/;"	t	typeref:struct:__anon3
offset	invlib.h	/^       short   offset;         \/* offset in this logical block *\/$/;"	m	struct:__anon4	access:public
__anon4::offset	invlib.h	/^       short   offset;         \/* offset in this logical block *\/$/;"	m	struct:__anon4	access:public
size	invlib.h	/^       unsigned char size;     \/* size of term *\/$/;"	m	struct:__anon4	access:public
__anon4::size	invlib.h	/^       unsigned char size;     \/* size of term *\/$/;"	m	struct:__anon4	access:public
space	invlib.h	/^       unsigned char space;    \/* number of longs of growth space *\/$/;"	m	struct:__anon4	access:public
__anon4::space	invlib.h	/^       unsigned char space;    \/* number of longs of growth space *\/$/;"	m	struct:__anon4	access:public
post	invlib.h	/^       long    post;           \/* number of postings for this entry *\/$/;"	m	struct:__anon4	access:public
__anon4::post	invlib.h	/^       long    post;           \/* number of postings for this entry *\/$/;"	m	struct:__anon4	access:public
ENTRY	invlib.h	/^} ENTRY;$/;"	t	typeref:struct:__anon4
lineoffset	invlib.h	/^	long	lineoffset;	\/* source line database offset *\/$/;"	m	struct:__anon5	access:public
__anon5::lineoffset	invlib.h	/^	long	lineoffset;	\/* source line database offset *\/$/;"	m	struct:__anon5	access:public
fcnoffset	invlib.h	/^	long	fcnoffset;	\/* function name database offset *\/$/;"	m	struct:__anon5	access:public
__anon5::fcnoffset	invlib.h	/^	long	fcnoffset;	\/* function name database offset *\/$/;"	m	struct:__anon5	access:public
fileindex	invlib.h	/^	long	fileindex : 24;	\/* source file name index *\/$/;"	m	struct:__anon5	access:public
__anon5::fileindex	invlib.h	/^	long	fileindex : 24;	\/* source file name index *\/$/;"	m	struct:__anon5	access:public
type	invlib.h	/^	long	type : 8;	\/* reference type (mark character) *\/$/;"	m	struct:__anon5	access:public
__anon5::type	invlib.h	/^	long	type : 8;	\/* reference type (mark character) *\/$/;"	m	struct:__anon5	access:public
POSTING	invlib.h	/^} POSTING;$/;"	t	typeref:struct:__anon5
boolclear	invlib.h	/^void	boolclear(void);$/;"	p	signature:(void)
boolfile	invlib.h	/^POSTING	*boolfile(INVCONTROL *invcntl, long *num, int boolarg);$/;"	p	signature:(INVCONTROL *invcntl, long *num, int boolarg)
invclose	invlib.h	/^void	invclose(INVCONTROL *invcntl);$/;"	p	signature:(INVCONTROL *invcntl)
invdump	invlib.h	/^void	invdump(INVCONTROL *invcntl, char *term);$/;"	p	signature:(INVCONTROL *invcntl, char *term)
invfind	invlib.h	/^long	invfind(INVCONTROL *invcntl, char *searchterm);$/;"	p	signature:(INVCONTROL *invcntl, char *searchterm)
invforward	invlib.h	/^int	invforward(INVCONTROL *invcntl);$/;"	p	signature:(INVCONTROL *invcntl)
invopen	invlib.h	/^int	invopen(INVCONTROL *invcntl, char *invname, char *invpost, int status);$/;"	p	signature:(INVCONTROL *invcntl, char *invname, char *invpost, int status)
invmake	invlib.h	/^long	invmake(char *invname, char *invpost, FILE *infile);$/;"	p	signature:(char *invname, char *invpost, FILE *infile)
invterm	invlib.h	/^long	invterm(INVCONTROL *invcntl, char *term);$/;"	p	signature:(INVCONTROL *invcntl, char *term)
YY_INT_ALIGNED	fscanner.c	4;"	d	file:
FLEX_SCANNER	fscanner.c	8;"	d	file:
YY_FLEX_MAJOR_VERSION	fscanner.c	9;"	d	file:
YY_FLEX_MINOR_VERSION	fscanner.c	10;"	d	file:
YY_FLEX_SUBMINOR_VERSION	fscanner.c	11;"	d	file:
FLEX_BETA	fscanner.c	13;"	d	file:
FLEXINT_H	fscanner.c	29;"	d	file:
__STDC_LIMIT_MACROS	fscanner.c	39;"	d	file:
flex_int8_t	fscanner.c	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_uint8_t	fscanner.c	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_int16_t	fscanner.c	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_uint16_t	fscanner.c	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_int32_t	fscanner.c	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_uint32_t	fscanner.c	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_int8_t	fscanner.c	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_int16_t	fscanner.c	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int32_t	fscanner.c	/^typedef int flex_int32_t;$/;"	t	file:
flex_uint8_t	fscanner.c	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
flex_uint16_t	fscanner.c	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint32_t	fscanner.c	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
INT8_MIN	fscanner.c	60;"	d	file:
INT16_MIN	fscanner.c	63;"	d	file:
INT32_MIN	fscanner.c	66;"	d	file:
INT8_MAX	fscanner.c	69;"	d	file:
INT16_MAX	fscanner.c	72;"	d	file:
INT32_MAX	fscanner.c	75;"	d	file:
UINT8_MAX	fscanner.c	78;"	d	file:
UINT16_MAX	fscanner.c	81;"	d	file:
UINT32_MAX	fscanner.c	84;"	d	file:
YY_USE_CONST	fscanner.c	92;"	d	file:
YY_USE_CONST	fscanner.c	99;"	d	file:
yyconst	fscanner.c	105;"	d	file:
yyconst	fscanner.c	107;"	d	file:
YY_NULL	fscanner.c	111;"	d	file:
YY_SC_TO_UI	fscanner.c	118;"	d	file:
BEGIN	fscanner.c	124;"	d	file:
YY_START	fscanner.c	130;"	d	file:
YYSTATE	fscanner.c	131;"	d	file:
YY_STATE_EOF	fscanner.c	134;"	d	file:
YY_NEW_FILE	fscanner.c	137;"	d	file:
YY_END_OF_BUFFER_CHAR	fscanner.c	139;"	d	file:
YY_BUF_SIZE	fscanner.c	143;"	d	file:
YY_STATE_BUF_SIZE	fscanner.c	148;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	fscanner.c	151;"	d	file:
YY_BUFFER_STATE	fscanner.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
EOB_ACT_CONTINUE_SCAN	fscanner.c	159;"	d	file:
EOB_ACT_END_OF_FILE	fscanner.c	160;"	d	file:
EOB_ACT_LAST_MATCH	fscanner.c	161;"	d	file:
YY_LESS_LINENO	fscanner.c	163;"	d	file:
yyless	fscanner.c	166;"	d	file:
unput	fscanner.c	179;"	d	file:
YY_TYPEDEF_YY_SIZE_T	fscanner.c	182;"	d	file:
yy_size_t	fscanner.c	/^typedef size_t yy_size_t;$/;"	t	file:
YY_STRUCT_YY_BUFFER_STATE	fscanner.c	187;"	d	file:
yy_buffer_state	fscanner.c	/^struct yy_buffer_state$/;"	s	file:
yy_input_file	fscanner.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_input_file	fscanner.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_ch_buf	fscanner.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_ch_buf	fscanner.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buf_pos	fscanner.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_buf_pos	fscanner.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buf_size	fscanner.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_buf_size	fscanner.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_n_chars	fscanner.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_n_chars	fscanner.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_is_our_buffer	fscanner.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_is_our_buffer	fscanner.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_is_interactive	fscanner.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_is_interactive	fscanner.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_at_bol	fscanner.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_at_bol	fscanner.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_bs_lineno	fscanner.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_bs_lineno	fscanner.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_bs_column	fscanner.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_bs_column	fscanner.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:	access:public
yy_fill_buffer	fscanner.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_fill_buffer	fscanner.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_status	fscanner.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:	access:public
yy_buffer_state::yy_buffer_status	fscanner.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:	access:public
YY_BUFFER_NEW	fscanner.c	234;"	d	file:
YY_BUFFER_NORMAL	fscanner.c	235;"	d	file:
YY_BUFFER_EOF_PENDING	fscanner.c	246;"	d	file:
yy_buffer_stack_top	fscanner.c	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	file:
yy_buffer_stack_max	fscanner.c	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	file:
yy_buffer_stack	fscanner.c	/^static YY_BUFFER_STATE * yy_buffer_stack = 0; \/**< Stack as an array. *\/$/;"	v	file:
YY_CURRENT_BUFFER	fscanner.c	262;"	d	file:
YY_CURRENT_BUFFER_LVALUE	fscanner.c	269;"	d	file:
yy_hold_char	fscanner.c	/^static char yy_hold_char;$/;"	v	file:
yy_n_chars	fscanner.c	/^static int yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yyleng	fscanner.c	/^int yyleng;$/;"	v
yy_c_buf_p	fscanner.c	/^static char *yy_c_buf_p = (char *) 0;$/;"	v	file:
yy_init	fscanner.c	/^static int yy_init = 0;		\/* whether we need to initialize *\/$/;"	v	file:
yy_start	fscanner.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_did_buffer_switch_on_eof	fscanner.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yyrestart	fscanner.c	/^void yyrestart (FILE *input_file  );$/;"	p	file:	signature:(FILE *input_file )
yy_switch_to_buffer	fscanner.c	/^void yy_switch_to_buffer (YY_BUFFER_STATE new_buffer  );$/;"	p	file:	signature:(YY_BUFFER_STATE new_buffer )
yy_create_buffer	fscanner.c	/^YY_BUFFER_STATE yy_create_buffer (FILE *file,int size  );$/;"	p	file:	signature:(FILE *file,int size )
yy_delete_buffer	fscanner.c	/^void yy_delete_buffer (YY_BUFFER_STATE b  );$/;"	p	file:	signature:(YY_BUFFER_STATE b )
yy_flush_buffer	fscanner.c	/^void yy_flush_buffer (YY_BUFFER_STATE b  );$/;"	p	file:	signature:(YY_BUFFER_STATE b )
yypush_buffer_state	fscanner.c	/^void yypush_buffer_state (YY_BUFFER_STATE new_buffer  );$/;"	p	file:	signature:(YY_BUFFER_STATE new_buffer )
yypop_buffer_state	fscanner.c	/^void yypop_buffer_state (void );$/;"	p	file:	signature:(void )
yyensure_buffer_stack	fscanner.c	/^static void yyensure_buffer_stack (void );$/;"	p	file:	signature:(void )
yy_load_buffer_state	fscanner.c	/^static void yy_load_buffer_state (void );$/;"	p	file:	signature:(void )
yy_init_buffer	fscanner.c	/^static void yy_init_buffer (YY_BUFFER_STATE b,FILE *file  );$/;"	p	file:	signature:(YY_BUFFER_STATE b,FILE *file )
YY_FLUSH_BUFFER	fscanner.c	298;"	d	file:
yy_scan_buffer	fscanner.c	/^YY_BUFFER_STATE yy_scan_buffer (char *base,yy_size_t size  );$/;"	p	file:	signature:(char *base,yy_size_t size )
yy_scan_string	fscanner.c	/^YY_BUFFER_STATE yy_scan_string (yyconst char *yy_str  );$/;"	p	file:	signature:(yyconst char *yy_str )
yy_scan_bytes	fscanner.c	/^YY_BUFFER_STATE yy_scan_bytes (yyconst char *bytes,int len  );$/;"	p	file:	signature:(yyconst char *bytes,int len )
yyalloc	fscanner.c	/^void *yyalloc (yy_size_t  );$/;"	p	file:
yyrealloc	fscanner.c	/^void *yyrealloc (void *,yy_size_t  );$/;"	p	file:	signature:(void *,yy_size_t )
yyfree	fscanner.c	/^void yyfree (void *  );$/;"	p	file:	signature:(void * )
yy_new_buffer	fscanner.c	308;"	d	file:
yy_set_interactive	fscanner.c	310;"	d	file:
yy_set_bol	fscanner.c	320;"	d	file:
YY_AT_BOL	fscanner.c	330;"	d	file:
yywrap	fscanner.c	334;"	d	file:
YY_SKIP_YYWRAP	fscanner.c	335;"	d	file:
YY_CHAR	fscanner.c	/^typedef unsigned char YY_CHAR;$/;"	t	file:
yyin	fscanner.c	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yyout	fscanner.c	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yy_state_type	fscanner.c	/^typedef int yy_state_type;$/;"	t	file:
yylineno	fscanner.c	/^int yylineno = 1;$/;"	v
yytext_ptr	fscanner.c	348;"	d	file:
yy_get_previous_state	fscanner.c	/^static yy_state_type yy_get_previous_state (void );$/;"	p	file:	signature:(void )
yy_try_NUL_trans	fscanner.c	/^static yy_state_type yy_try_NUL_trans (yy_state_type current_state  );$/;"	p	file:	signature:(yy_state_type current_state )
yy_get_next_buffer	fscanner.c	/^static int yy_get_next_buffer (void );$/;"	p	file:	signature:(void )
yy_fatal_error	fscanner.c	/^static void yy_fatal_error (yyconst char msg[]  );$/;"	p	file:	signature:(yyconst char msg[] )
YY_DO_BEFORE_ACTION	fscanner.c	358;"	d	file:
YY_NUM_RULES	fscanner.c	366;"	d	file:
YY_END_OF_BUFFER	fscanner.c	367;"	d	file:
yy_trans_info	fscanner.c	/^struct yy_trans_info$/;"	s	file:
yy_verify	fscanner.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:	access:public
yy_trans_info::yy_verify	fscanner.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:	access:public
yy_nxt	fscanner.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:	access:public
yy_trans_info::yy_nxt	fscanner.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:	access:public
yy_accept	fscanner.c	/^static yyconst flex_int16_t yy_accept[5144] =$/;"	v	file:
yy_ec	fscanner.c	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	file:
yy_meta	fscanner.c	/^static yyconst flex_int32_t yy_meta[51] =$/;"	v	file:
yy_base	fscanner.c	/^static yyconst flex_int32_t yy_base[6482] =$/;"	v	file:
yy_def	fscanner.c	/^static yyconst flex_int16_t yy_def[6482] =$/;"	v	file:
yy_nxt	fscanner.c	/^static yyconst flex_int16_t yy_nxt[123505] =$/;"	v	file:
yy_chk	fscanner.c	/^static yyconst flex_int16_t yy_chk[123505] =$/;"	v	file:
yy_last_accepting_state	fscanner.c	/^static yy_state_type yy_last_accepting_state;$/;"	v	file:
yy_last_accepting_cpos	fscanner.c	/^static char *yy_last_accepting_cpos;$/;"	v	file:
yy_flex_debug	fscanner.c	/^int yy_flex_debug = 0;$/;"	v
REJECT	fscanner.c	29609;"	d	file:
yy_more_flag	fscanner.c	/^static int yy_more_flag = 0;$/;"	v	file:
yy_more_len	fscanner.c	/^static int yy_more_len = 0;$/;"	v	file:
yymore	fscanner.c	29612;"	d	file:
YY_MORE_ADJ	fscanner.c	29613;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	fscanner.c	29614;"	d	file:
yytext	fscanner.c	/^char *yytext;$/;"	v
IFLEVELINC	fscanner.c	29668;"	d	file:
YY_NO_TOP_STATE	fscanner.c	29669;"	d	file:
rcsid	fscanner.c	/^static char const rcsid[] = "$Id: fscanner.l,v 1.17 2012\/08\/02 21:48:08 broeker Exp $";$/;"	v	file:
first	fscanner.c	/^int	first;	\/* buffer index for first char of symbol *\/$/;"	v
last	fscanner.c	/^int	last;	\/* buffer index for last char of symbol *\/$/;"	v
lineno	fscanner.c	/^int	lineno;	\/* symbol line number *\/$/;"	v
myylineno	fscanner.c	/^int	myylineno = 1;$/;"	v
my_yyleng	fscanner.c	/^size_t my_yyleng = 0;$/;"	v
my_yytext	fscanner.c	/^char *my_yytext = NULL;$/;"	v
arraydimension	fscanner.c	/^static	BOOL	arraydimension;		\/* inside array dimension declaration *\/$/;"	v	file:
bplisting	fscanner.c	/^static	BOOL	bplisting;		\/* breakpoint listing *\/$/;"	v	file:
braces	fscanner.c	/^static	int	braces;			\/* unmatched left brace count *\/$/;"	v	file:
classdef	fscanner.c	/^static	BOOL	classdef;		\/* c++ class definition *\/$/;"	v	file:
elseelif	fscanner.c	/^static	BOOL	elseelif;		\/* #else or #elif found *\/$/;"	v	file:
esudef	fscanner.c	/^static	BOOL	esudef;			\/* enum\/struct\/union global definition *\/$/;"	v	file:
external	fscanner.c	/^static	BOOL	external;		\/* external definition *\/$/;"	v	file:
externalbraces	fscanner.c	/^static	int	externalbraces;		\/* external definition outer brace count *\/$/;"	v	file:
fcndef	fscanner.c	/^static	BOOL	fcndef;			\/* function definition *\/$/;"	v	file:
global	fscanner.c	/^static	BOOL	global;			\/* file global scope (outside functions) *\/$/;"	v	file:
iflevel	fscanner.c	/^static	int	iflevel;		\/* #if nesting level *\/$/;"	v	file:
initializer	fscanner.c	/^static	BOOL	initializer;		\/* data initializer *\/$/;"	v	file:
initializerbraces	fscanner.c	/^static	int	initializerbraces;	\/* data initializer outer brace count *\/$/;"	v	file:
lex	fscanner.c	/^static	BOOL	lex;			\/* lex file *\/$/;"	v	file:
miflevel	fscanner.c	/^static	int	miflevel = IFLEVELINC;	\/* maximum #if nesting level *\/$/;"	v	file:
maxifbraces	fscanner.c	/^static	int	*maxifbraces;		\/* maximum brace count within #if *\/$/;"	v	file:
preifbraces	fscanner.c	/^static	int	*preifbraces;		\/* brace count before #if *\/$/;"	v	file:
parens	fscanner.c	/^static	int	parens;			\/* unmatched left parenthesis count *\/$/;"	v	file:
ppdefine	fscanner.c	/^static	BOOL	ppdefine;		\/* preprocessor define statement *\/$/;"	v	file:
pseudoelif	fscanner.c	/^static	BOOL	pseudoelif;		\/* pseudo-#elif *\/$/;"	v	file:
oldtype	fscanner.c	/^static	BOOL	oldtype;		\/* next identifier is an old type *\/$/;"	v	file:
rules	fscanner.c	/^static	BOOL	rules;			\/* lex\/yacc rules *\/$/;"	v	file:
sdl	fscanner.c	/^static	BOOL	sdl;			\/* sdl file *\/$/;"	v	file:
structfield	fscanner.c	/^static	BOOL	structfield;		\/* structure field declaration *\/$/;"	v	file:
tagdef	fscanner.c	/^static	int	tagdef;			\/* class\/enum\/struct\/union tag definition *\/$/;"	v	file:
template	fscanner.c	/^static	BOOL	template;		\/* function template *\/$/;"	v	file:
templateparens	fscanner.c	/^static	int	templateparens;		\/* function template outer parentheses count *\/$/;"	v	file:
typedefbraces	fscanner.c	/^static	int	typedefbraces = -1;	\/* initial typedef brace count *\/$/;"	v	file:
token	fscanner.c	/^static	int	token;			\/* token found *\/$/;"	v	file:
ident_start	fscanner.c	/^static	int 	ident_start;		\/* begin of preceding identifier *\/$/;"	v	file:
COMMENTS_BY_FLEX	fscanner.c	29723;"	d	file:
skipcomment_input	fscanner.c	/^static	int	skipcomment_input(void);$/;"	p	file:	signature:(void)
comment	fscanner.c	/^static	int	comment(void);$/;"	p	file:	signature:(void)
insidestring_input	fscanner.c	/^static	int	insidestring_input(int);$/;"	p	file:	signature:(int)
my_yymore	fscanner.c	/^static	void	my_yymore(void);$/;"	p	file:	signature:(void)
skipcomment_input	fscanner.c	29734;"	d	file:
YY_INPUT	fscanner.c	29737;"	d	file:
INITIAL	fscanner.c	29752;"	d	file:
SDL	fscanner.c	29753;"	d	file:
IN_PREPROC	fscanner.c	29754;"	d	file:
WAS_ENDIF	fscanner.c	29755;"	d	file:
WAS_IDENTIFIER	fscanner.c	29756;"	d	file:
WAS_ESU	fscanner.c	29757;"	d	file:
IN_DQUOTE	fscanner.c	29758;"	d	file:
IN_SQUOTE	fscanner.c	29759;"	d	file:
COMMENT	fscanner.c	29760;"	d	file:
YY_EXTRA_TYPE	fscanner.c	29771;"	d	file:
yy_init_globals	fscanner.c	/^static int yy_init_globals (void );$/;"	p	file:	signature:(void )
yylex_destroy	fscanner.c	/^int yylex_destroy (void );$/;"	p	file:	signature:(void )
yyget_debug	fscanner.c	/^int yyget_debug (void );$/;"	p	file:	signature:(void )
yyset_debug	fscanner.c	/^void yyset_debug (int debug_flag  );$/;"	p	file:	signature:(int debug_flag )
yyget_extra	fscanner.c	/^YY_EXTRA_TYPE yyget_extra (void );$/;"	p	file:	signature:(void )
yyset_extra	fscanner.c	/^void yyset_extra (YY_EXTRA_TYPE user_defined  );$/;"	p	file:	signature:(YY_EXTRA_TYPE user_defined )
yyget_in	fscanner.c	/^FILE *yyget_in (void );$/;"	p	file:	signature:(void )
yyset_in	fscanner.c	/^void yyset_in  (FILE * in_str  );$/;"	p	file:	signature:(FILE * in_str )
yyget_out	fscanner.c	/^FILE *yyget_out (void );$/;"	p	file:	signature:(void )
yyset_out	fscanner.c	/^void yyset_out  (FILE * out_str  );$/;"	p	file:	signature:(FILE * out_str )
yyget_leng	fscanner.c	/^int yyget_leng (void );$/;"	p	file:	signature:(void )
yyget_text	fscanner.c	/^char *yyget_text (void );$/;"	p	file:	signature:(void )
yyget_lineno	fscanner.c	/^int yyget_lineno (void );$/;"	p	file:	signature:(void )
yyset_lineno	fscanner.c	/^void yyset_lineno (int line_number  );$/;"	p	file:	signature:(int line_number )
yywrap	fscanner.c	/^extern "C" int yywrap (void );$/;"	p	file:	signature:(void )
yywrap	fscanner.c	/^extern int yywrap (void );$/;"	p	file:	signature:(void )
yyunput	fscanner.c	/^    static void yyunput (int c,char *buf_ptr  );$/;"	p	file:	signature:(int c,char *buf_ptr )
yy_flex_strncpy	fscanner.c	/^static void yy_flex_strncpy (char *,yyconst char *,int );$/;"	p	file:	signature:(char *,yyconst char *,int )
yy_flex_strlen	fscanner.c	/^static int yy_flex_strlen (yyconst char * );$/;"	p	file:	signature:(yyconst char * )
yyinput	fscanner.c	/^static int yyinput (void );$/;"	p	file:	signature:(void )
input	fscanner.c	/^static int input (void );$/;"	p	file:	signature:(void )
yy_start_stack_ptr	fscanner.c	/^        static int yy_start_stack_ptr = 0;$/;"	v	file:
yy_start_stack_depth	fscanner.c	/^        static int yy_start_stack_depth = 0;$/;"	v	file:
yy_start_stack	fscanner.c	/^        static int *yy_start_stack = NULL;$/;"	v	file:
yy_push_state	fscanner.c	/^    static void yy_push_state (int new_state );$/;"	p	file:	signature:(int new_state )
yy_pop_state	fscanner.c	/^    static void yy_pop_state (void );$/;"	p	file:	signature:(void )
yy_top_state	fscanner.c	/^    static int yy_top_state (void );$/;"	p	file:	signature:(void )
YY_READ_BUF_SIZE	fscanner.c	29849;"	d	file:
ECHO	fscanner.c	29857;"	d	file:
YY_INPUT	fscanner.c	29864;"	d	file:
yyterminate	fscanner.c	29901;"	d	file:
YY_START_STACK_INCR	fscanner.c	29906;"	d	file:
YY_FATAL_ERROR	fscanner.c	29911;"	d	file:
YY_DECL_IS_OURS	fscanner.c	29920;"	d	file:
yylex	fscanner.c	/^extern int yylex (void);$/;"	p	file:	signature:(void)
YY_DECL	fscanner.c	29924;"	d	file:
YY_USER_ACTION	fscanner.c	29931;"	d	file:
YY_BREAK	fscanner.c	29936;"	d	file:
YY_RULE_SETUP	fscanner.c	29939;"	d	file:
yy_get_next_buffer	fscanner.c	/^static int yy_get_next_buffer (void)$/;"	f	file:	signature:(void)
yy_get_previous_state	fscanner.c	/^    static yy_state_type yy_get_previous_state (void)$/;"	f	file:	signature:(void)
yy_try_NUL_trans	fscanner.c	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	file:	signature:(yy_state_type yy_current_state )
yyunput	fscanner.c	/^    static void yyunput (int c, register char * yy_bp )$/;"	f	file:	signature:(int c, register char * yy_bp )
yyinput	fscanner.c	/^    static int yyinput (void)$/;"	f	file:	signature:(void)
yyrestart	fscanner.c	/^    void yyrestart  (FILE * input_file )$/;"	f	signature:(FILE * input_file )
yy_switch_to_buffer	fscanner.c	/^    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f	signature:(YY_BUFFER_STATE new_buffer )
yy_load_buffer_state	fscanner.c	/^static void yy_load_buffer_state  (void)$/;"	f	file:	signature:(void)
yy_create_buffer	fscanner.c	/^    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )$/;"	f	signature:(FILE * file, int size )
yy_delete_buffer	fscanner.c	/^    void yy_delete_buffer (YY_BUFFER_STATE  b )$/;"	f	signature:(YY_BUFFER_STATE b )
isatty	fscanner.c	/^extern int isatty (int );$/;"	p	file:	signature:(int )
yy_init_buffer	fscanner.c	/^    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	file:	signature:(YY_BUFFER_STATE b, FILE * file )
yy_flush_buffer	fscanner.c	/^    void yy_flush_buffer (YY_BUFFER_STATE  b )$/;"	f	signature:(YY_BUFFER_STATE b )
yypush_buffer_state	fscanner.c	/^void yypush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f	signature:(YY_BUFFER_STATE new_buffer )
yypop_buffer_state	fscanner.c	/^void yypop_buffer_state (void)$/;"	f	signature:(void)
yyensure_buffer_stack	fscanner.c	/^static void yyensure_buffer_stack (void)$/;"	f	file:	signature:(void)
yy_scan_buffer	fscanner.c	/^YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )$/;"	f	signature:(char * base, yy_size_t size )
yy_scan_string	fscanner.c	/^YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )$/;"	f	signature:(yyconst char * yystr )
yy_scan_bytes	fscanner.c	/^YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )$/;"	f	signature:(yyconst char * yybytes, int _yybytes_len )
yy_push_state	fscanner.c	/^    static void yy_push_state (int  new_state )$/;"	f	file:	signature:(int new_state )
yy_pop_state	fscanner.c	/^    static void yy_pop_state  (void)$/;"	f	file:	signature:(void)
yy_top_state	fscanner.c	/^    static int yy_top_state  (void)$/;"	f	file:	signature:(void)
YY_EXIT_FAILURE	fscanner.c	31820;"	d	file:
yy_fatal_error	fscanner.c	/^static void yy_fatal_error (yyconst char* msg )$/;"	f	file:	signature:(yyconst char* msg )
yyless	fscanner.c	31831;"	d	file:
yyless	fscanner.c	31832;"	d	file:
yyget_lineno	fscanner.c	/^int yyget_lineno  (void)$/;"	f	signature:(void)
yyget_in	fscanner.c	/^FILE *yyget_in  (void)$/;"	f	signature:(void)
yyget_out	fscanner.c	/^FILE *yyget_out  (void)$/;"	f	signature:(void)
yyget_leng	fscanner.c	/^int yyget_leng  (void)$/;"	f	signature:(void)
yyget_text	fscanner.c	/^char *yyget_text  (void)$/;"	f	signature:(void)
yyset_lineno	fscanner.c	/^void yyset_lineno (int  line_number )$/;"	f	signature:(int line_number )
yyset_in	fscanner.c	/^void yyset_in (FILE *  in_str )$/;"	f	signature:(FILE * in_str )
yyset_out	fscanner.c	/^void yyset_out (FILE *  out_str )$/;"	f	signature:(FILE * out_str )
yyget_debug	fscanner.c	/^int yyget_debug  (void)$/;"	f	signature:(void)
yyset_debug	fscanner.c	/^void yyset_debug (int  bdebug )$/;"	f	signature:(int bdebug )
yy_init_globals	fscanner.c	/^static int yy_init_globals (void)$/;"	f	file:	signature:(void)
yylex_destroy	fscanner.c	/^int yylex_destroy  (void)$/;"	f	signature:(void)
yy_flex_strncpy	fscanner.c	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )$/;"	f	file:	signature:(char* s1, yyconst char * s2, int n )
yy_flex_strlen	fscanner.c	/^static int yy_flex_strlen (yyconst char * s )$/;"	f	file:	signature:(yyconst char * s )
yyalloc	fscanner.c	/^void *yyalloc (yy_size_t  size )$/;"	f	signature:(yy_size_t size )
yyrealloc	fscanner.c	/^void *yyrealloc  (void * ptr, yy_size_t  size )$/;"	f	signature:(void * ptr, yy_size_t size )
yyfree	fscanner.c	/^void yyfree (void * ptr )$/;"	f	signature:(void * ptr )
YYTABLES_NAME	fscanner.c	32030;"	d	file:
initscanner	fscanner.c	/^initscanner(char *srcfile)$/;"	f	signature:(char *srcfile)
string_terminator	fscanner.c	/^static int string_terminator = '\\0';$/;"	v	file:
insidestring_input	fscanner.c	/^insidestring_input(int c)$/;"	f	file:	signature:(int c)
comment	fscanner.c	/^comment(void)$/;"	f	file:	signature:(void)
skipcomment_input	fscanner.c	/^skipcomment_input(void)$/;"	f	file:	signature:(void)
MY_YY_ALLOCSTEP	fscanner.c	32241;"	d	file:
my_yymore	fscanner.c	/^my_yymore(void)$/;"	f	file:	signature:(void)
rcsid	history.c	/^static char const rcsid[] = "$Id: history.c,v 1.3 2006\/07\/23 20:59:20 broeker Exp $";$/;"	v	file:
tail	history.c	/^static	struct cmd *tail, *current;$/;"	v	typeref:struct:cmd	file:
current	history.c	/^static	struct cmd *tail, *current;$/;"	v	typeref:struct:	file:
addcmd	history.c	/^addcmd(int f, char *s)		\/* field number and command text *\/$/;"	f	signature:(int f, char *s)
prevcmd	history.c	/^prevcmd(void)$/;"	f	signature:(void)
nextcmd	history.c	/^nextcmd(void)$/;"	f	signature:(void)
resetcmd	history.c	/^resetcmd(void)$/;"	f	signature:(void)
currentcmd	history.c	/^currentcmd(void)$/;"	f	signature:(void)
rcsid	find.c	/^static char const rcsid[] = "$Id: find.c,v 1.25 2012\/06\/15 11:18:11 nhorman Exp $";$/;"	v	file:
blockp	find.c	/^char	*blockp;			\/* pointer to current char in block *\/$/;"	v
block	find.c	/^char	block[BUFSIZ + 2];		\/* leave room for end-of-block mark *\/$/;"	v
blocklen	find.c	/^int	blocklen;			\/* length of disk block read *\/$/;"	v
blockmark	find.c	/^char	blockmark;			\/* mark character to be searched for *\/$/;"	v
blocknumber	find.c	/^long	blocknumber;			\/* block number *\/$/;"	v
global	find.c	/^static	char	global[] = "<global>";	\/* dummy global function name *\/$/;"	v	file:
cpattern	find.c	/^static	char	cpattern[PATLEN + 1];	\/* compressed pattern *\/$/;"	v	file:
lastfcnoffset	find.c	/^static	long	lastfcnoffset;		\/* last function name offset *\/$/;"	v	file:
postingp	find.c	/^static	POSTING	*postingp;		\/* retrieved posting set pointer *\/$/;"	v	file:
postingsfound	find.c	/^static	long	postingsfound;		\/* retrieved number of postings *\/$/;"	v	file:
regexp	find.c	/^static	regex_t regexp;			\/* regular expression *\/$/;"	v	file:
isregexp_valid	find.c	/^static	BOOL	isregexp_valid = NO;	\/* regular expression status *\/$/;"	v	file:
match	find.c	/^static	BOOL	match(void);$/;"	p	file:	signature:(void)
matchrest	find.c	/^static	BOOL	matchrest(void);$/;"	p	file:	signature:(void)
getposting	find.c	/^static	POSTING	*getposting(void);$/;"	p	file:	signature:(void)
lcasify	find.c	/^static	char	*lcasify(char *s);$/;"	p	file:	signature:(char *s)
findcalledbysub	find.c	/^static	void	findcalledbysub(char *file, BOOL macro);$/;"	p	file:	signature:(char *file, BOOL macro)
findterm	find.c	/^static	void	findterm(char *pattern);$/;"	p	file:	signature:(char *pattern)
putline	find.c	/^static	void	putline(FILE *output);$/;"	p	file:	signature:(FILE *output)
find_symbol_or_assignment	find.c	/^static  char    *find_symbol_or_assignment(char *pattern, BOOL assign_flag);$/;"	p	file:	signature:(char *pattern, BOOL assign_flag)
check_for_assignment	find.c	/^static  BOOL    check_for_assignment(void);$/;"	p	file:	signature:(void)
putpostingref	find.c	/^static	void	putpostingref(POSTING *p, char *pat);$/;"	p	file:	signature:(POSTING *p, char *pat)
putref	find.c	/^static	void	putref(int seemore, char *file, char *func);$/;"	p	file:	signature:(int seemore, char *file, char *func)
putsource	find.c	/^static	void	putsource(int seemore, FILE *output);$/;"	p	file:	signature:(int seemore, FILE *output)
findsymbol	find.c	/^findsymbol(char *pattern)$/;"	f	signature:(char *pattern)
findassign	find.c	/^findassign(char *pattern)$/;"	f	signature:(char *pattern)
check_for_assignment	find.c	/^check_for_assignment(void) $/;"	f	file:	signature:(void)
find_symbol_or_assignment	find.c	/^find_symbol_or_assignment(char *pattern, BOOL assign_flag)$/;"	f	file:	signature:(char *pattern, BOOL assign_flag)
finddef	find.c	/^finddef(char *pattern)$/;"	f	signature:(char *pattern)
findallfcns	find.c	/^findallfcns(char *dummy)$/;"	f	signature:(char *dummy)
findcalling	find.c	/^findcalling(char *pattern)$/;"	f	signature:(char *pattern)
findstring	find.c	/^findstring(char *pattern)$/;"	f	signature:(char *pattern)
findregexp	find.c	/^findregexp(char *egreppat)$/;"	f	signature:(char *egreppat)
findfile	find.c	/^findfile(char *dummy)$/;"	f	signature:(char *dummy)
findinclude	find.c	/^findinclude(char *pattern)$/;"	f	signature:(char *pattern)
findinit	find.c	/^findinit(char *pattern)$/;"	f	signature:(char *pattern)
findcleanup	find.c	/^findcleanup(void)$/;"	f	signature:(void)
match	find.c	/^match(void)$/;"	f	file:	signature:(void)
matchrest	find.c	/^matchrest(void)$/;"	f	file:	signature:(void)
putref	find.c	/^putref(int seemore, char *file, char *func)$/;"	f	file:	signature:(int seemore, char *file, char *func)
putsource	find.c	/^putsource(int seemore, FILE *output)$/;"	f	file:	signature:(int seemore, FILE *output)
putline	find.c	/^putline(FILE *output)$/;"	f	file:	signature:(FILE *output)
fetch_string_from_dbase	find.c	/^fetch_string_from_dbase(char *s, size_t length)$/;"	f	signature:(char *s, size_t length)
scanpast	find.c	/^scanpast(char c)$/;"	f	signature:(char c)
read_block	find.c	/^read_block(void)$/;"	f	signature:(void)
lcasify	find.c	/^lcasify(char *s)$/;"	f	file:	signature:(char *s)
findcalledby	find.c	/^findcalledby(char *pattern)$/;"	f	signature:(char *pattern)
findterm	find.c	/^findterm(char *pattern)$/;"	f	file:	signature:(char *pattern)
getposting	find.c	/^getposting(void)$/;"	f	file:	signature:(void)
putpostingref	find.c	/^putpostingref(POSTING *p, char *pat)$/;"	f	file:	signature:(POSTING *p, char *pat)
dbseek	find.c	/^dbseek(long offset)$/;"	f	signature:(long offset)
findcalledbysub	find.c	/^findcalledbysub(char *file, BOOL macro)$/;"	f	file:	signature:(char *file, BOOL macro)
rcsid	alloc.c	/^static char const rcsid[] = "$Id: alloc.c,v 1.8 2006\/07\/23 20:59:20 broeker Exp $";$/;"	v	file:
alloctest	alloc.c	/^static	void	*alloctest(void *p);$/;"	p	file:	signature:(void *p)
calloc	alloc.c	/^char	*calloc(), *malloc(), *realloc(), *strcpy();$/;"	p	file:
malloc	alloc.c	/^char	*calloc(), *malloc(), *realloc(), *strcpy();$/;"	p	file:
realloc	alloc.c	/^char	*calloc(), *malloc(), *realloc(), *strcpy();$/;"	p	file:
strcpy	alloc.c	/^char	*calloc(), *malloc(), *realloc(), *strcpy();$/;"	p	file:
my_strdup	alloc.c	/^my_strdup(char *s)$/;"	f	signature:(char *s)
mymalloc	alloc.c	/^mymalloc(size_t size)$/;"	f	signature:(size_t size)
mycalloc	alloc.c	/^mycalloc(size_t nelem, size_t size)$/;"	f	signature:(size_t nelem, size_t size)
myrealloc	alloc.c	/^myrealloc(void *p, size_t size)$/;"	f	signature:(void *p, size_t size)
alloctest	alloc.c	/^alloctest(void *p)$/;"	f	file:	signature:(void *p)
done	egrep.y	/^done:$/;"	l
CSCOPE_ALLOC_H	alloc.h	36;"	d
mycalloc	alloc.h	/^void	*mycalloc(size_t nelem, size_t size);$/;"	p	signature:(size_t nelem, size_t size)
mymalloc	alloc.h	/^void	*mymalloc(size_t size);$/;"	p	signature:(size_t size)
myrealloc	alloc.h	/^void	*myrealloc(void *p, size_t size);$/;"	p	signature:(void *p, size_t size)
my_strdup	alloc.h	/^char	*my_strdup(char *s);$/;"	p	signature:(char *s)
rcsid	basename.c	/^static char const rcsid[] = "$Id: basename.c,v 1.3 2001\/07\/05 14:31:00 broeker Exp $";$/;"	v	file:
mybasename	basename.c	/^mybasename(char *path)$/;"	f	signature:(char *path)
CSCOPE_CONSTANTS_H	constants.h	41;"	d
ctrl	constants.h	45;"	d
strequal	constants.h	48;"	d
strnotequal	constants.h	49;"	d
setmark	constants.h	52;"	d
getrefchar	constants.h	56;"	d
skiprefchar	constants.h	62;"	d
ESC	constants.h	64;"	d
DEL	constants.h	65;"	d
DUMMYCHAR	constants.h	66;"	d
MSGLEN	constants.h	67;"	d
NUMLEN	constants.h	68;"	d
PATHLEN	constants.h	69;"	d
PATLEN	constants.h	70;"	d
TEMPSTRING_LEN	constants.h	71;"	d
REFFILE	constants.h	72;"	d
NAMEFILE	constants.h	73;"	d
INVNAME	constants.h	74;"	d
INVPOST	constants.h	75;"	d
INVNAME2	constants.h	76;"	d
INVPOST2	constants.h	77;"	d
STMTMAX	constants.h	79;"	d
STR2	constants.h	81;"	d
STRINGIZE	constants.h	82;"	d
PATLEN_STR	constants.h	83;"	d
PATHLEN_STR	constants.h	84;"	d
NUMLEN_STR	constants.h	85;"	d
TEMPSTRING_LEN_STR	constants.h	86;"	d
FLDLINE	constants.h	89;"	d
MSGLINE	constants.h	90;"	d
PRLINE	constants.h	91;"	d
REFLINE	constants.h	92;"	d
SYMBOL	constants.h	95;"	d
DEFINITION	constants.h	96;"	d
CALLEDBY	constants.h	97;"	d
CALLING	constants.h	98;"	d
STRING	constants.h	99;"	d
CHANGE	constants.h	100;"	d
REGEXP	constants.h	101;"	d
FILENAME	constants.h	102;"	d
INCLUDES	constants.h	103;"	d
FIELDS	constants.h	104;"	d
TERMINFO	constants.h	107;"	d
TERMINFO	constants.h	109;"	d
KEY_BREAK	constants.h	115;"	d
KEY_ENTER	constants.h	118;"	d
KEY_BACKSPACE	constants.h	121;"	d
cbreak	constants.h	125;"	d
erasechar	constants.h	129;"	d
killchar	constants.h	130;"	d
erasechar	constants.h	132;"	d
killchar	constants.h	133;"	d
vpaccess	vpaccess.c	/^vpaccess(char *path, mode_t amode)$/;"	f	signature:(char *path, mode_t amode)
ERR	invlib.c	41;"	d	file:
DEBUG	invlib.c	48;"	d	file:
BLOCKSIZE	invlib.c	49;"	d	file:
POSTINC	invlib.c	50;"	d	file:
SEP	invlib.c	51;"	d	file:
SETINC	invlib.c	52;"	d	file:
STATS	invlib.c	53;"	d	file:
SUPERINC	invlib.c	54;"	d	file:
TERMMAX	invlib.c	55;"	d	file:
FMTVERSION	invlib.c	56;"	d	file:
ZIPFSIZE	invlib.c	57;"	d	file:
rcsid	invlib.c	/^static char const rcsid[] = "$Id: invlib.c,v 1.21 2012\/07\/10 20:01:40 nhorman Exp $";$/;"	v	file:
invbreak	invlib.c	/^int	invbreak;$/;"	v
boolready	invlib.c	/^static	int	boolready(void);$/;"	p	file:	signature:(void)
invnewterm	invlib.c	/^static	int	invnewterm(void);$/;"	p	file:	signature:(void)
invstep	invlib.c	/^static	void	invstep(INVCONTROL *invcntl);$/;"	p	file:	signature:(INVCONTROL *invcntl)
invcannotalloc	invlib.c	/^static	void	invcannotalloc(unsigned n);$/;"	p	file:	signature:(unsigned n)
invcannotopen	invlib.c	/^static	void	invcannotopen(char *file);$/;"	p	file:	signature:(char *file)
invcannotwrite	invlib.c	/^static	void	invcannotwrite(char *file);$/;"	p	file:	signature:(char *file)
showzipf	invlib.c	/^int	showzipf;	\/* show postings per term distribution *\/$/;"	v
item	invlib.c	/^static	POSTING	*item, *enditem, *item1 = NULL, *item2 = NULL;$/;"	v	file:
enditem	invlib.c	/^static	POSTING	*item, *enditem, *item1 = NULL, *item2 = NULL;$/;"	v	file:
item1	invlib.c	/^static	POSTING	*item, *enditem, *item1 = NULL, *item2 = NULL;$/;"	v	file:
item2	invlib.c	/^static	POSTING	*item, *enditem, *item1 = NULL, *item2 = NULL;$/;"	v	file:
setsize1	invlib.c	/^static	unsigned setsize1, setsize2;$/;"	v	file:
setsize2	invlib.c	/^static	unsigned setsize1, setsize2;$/;"	v	file:
numitems	invlib.c	/^static	long	numitems, totterm, zerolong;$/;"	v	file:
totterm	invlib.c	/^static	long	numitems, totterm, zerolong;$/;"	v	file:
zerolong	invlib.c	/^static	long	numitems, totterm, zerolong;$/;"	v	file:
indexfile	invlib.c	/^static	char	*indexfile, *postingfile;$/;"	v	file:
postingfile	invlib.c	/^static	char	*indexfile, *postingfile;$/;"	v	file:
outfile	invlib.c	/^static	FILE	*outfile, *fpost;$/;"	v	file:
fpost	invlib.c	/^static	FILE	*outfile, *fpost;$/;"	v	file:
supersize	invlib.c	/^static	unsigned supersize = SUPERINC, supintsize;$/;"	v	file:
supintsize	invlib.c	/^static	unsigned supersize = SUPERINC, supintsize;$/;"	v	file:
numpost	invlib.c	/^static  unsigned int numpost, numlogblk, amtused, nextpost;$/;"	v	file:
numlogblk	invlib.c	/^static  unsigned int numpost, numlogblk, amtused, nextpost;$/;"	v	file:
amtused	invlib.c	/^static  unsigned int numpost, numlogblk, amtused, nextpost;$/;"	v	file:
nextpost	invlib.c	/^static  unsigned int numpost, numlogblk, amtused, nextpost;$/;"	v	file:
lastinblk	invlib.c	/^static  unsigned int lastinblk, numinvitems;$/;"	v	file:
numinvitems	invlib.c	/^static  unsigned int lastinblk, numinvitems;$/;"	v	file:
POST	invlib.c	/^static	POSTING	*POST, *postptr;$/;"	v	file:
postptr	invlib.c	/^static	POSTING	*POST, *postptr;$/;"	v	file:
SUPINT	invlib.c	/^static	unsigned long	*SUPINT, *supint, nextsupfing;$/;"	v	file:
supint	invlib.c	/^static	unsigned long	*SUPINT, *supint, nextsupfing;$/;"	v	file:
nextsupfing	invlib.c	/^static	unsigned long	*SUPINT, *supint, nextsupfing;$/;"	v	file:
SUPFING	invlib.c	/^static	char	*SUPFING, *supfing;$/;"	v	file:
supfing	invlib.c	/^static	char	*SUPFING, *supfing;$/;"	v	file:
thisterm	invlib.c	/^static	char	thisterm[TERMMAX];$/;"	v	file:
logicalblk	invlib.c	/^typedef union logicalblk {$/;"	u	file:
invblk	invlib.c	/^	long	invblk[BLOCKSIZE \/ sizeof(long)];$/;"	m	union:logicalblk	file:	access:public
logicalblk::invblk	invlib.c	/^	long	invblk[BLOCKSIZE \/ sizeof(long)];$/;"	m	union:logicalblk	file:	access:public
chrblk	invlib.c	/^	char	chrblk[BLOCKSIZE];$/;"	m	union:logicalblk	file:	access:public
logicalblk::chrblk	invlib.c	/^	char	chrblk[BLOCKSIZE];$/;"	m	union:logicalblk	file:	access:public
t_logicalblk	invlib.c	/^} t_logicalblk;$/;"	t	typeref:union:logicalblk	file:
logicalblk	invlib.c	/^static t_logicalblk logicalblk;$/;"	v	file:
totpost	invlib.c	/^static	long	totpost;$/;"	v	file:
zipf	invlib.c	/^static	int	zipf[ZIPFSIZE + 1];$/;"	v	file:
invmake	invlib.c	/^invmake(char *invname, char *invpost, FILE *infile)$/;"	f	signature:(char *invname, char *invpost, FILE *infile)
invnewterm	invlib.c	/^invnewterm(void)$/;"	f	file:	signature:(void)
invflipname	invlib.c	/^invflipname(char * invname, const char *from, const char *to)$/;"	f	file:	signature:(char * invname, const char *from, const char *to)
invopen	invlib.c	/^invopen(INVCONTROL *invcntl, char *invname, char *invpost, int stat)$/;"	f	signature:(INVCONTROL *invcntl, char *invname, char *invpost, int stat)
invclose	invlib.c	/^invclose(INVCONTROL *invcntl)$/;"	f	signature:(INVCONTROL *invcntl)
invstep	invlib.c	/^invstep(INVCONTROL *invcntl)$/;"	f	file:	signature:(INVCONTROL *invcntl)
invforward	invlib.c	/^invforward(INVCONTROL *invcntl)$/;"	f	signature:(INVCONTROL *invcntl)
invterm	invlib.c	/^invterm(INVCONTROL *invcntl, char *term)$/;"	f	signature:(INVCONTROL *invcntl, char *term)
invfind	invlib.c	/^invfind(INVCONTROL *invcntl, char *searchterm) \/* term being searched for  *\/$/;"	f	signature:(INVCONTROL *invcntl, char *searchterm)
invdump	invlib.c	/^invdump(INVCONTROL *invcntl, char *term)$/;"	f	signature:(INVCONTROL *invcntl, char *term)
boolready	invlib.c	/^boolready(void)$/;"	f	file:	signature:(void)
boolclear	invlib.c	/^boolclear(void)$/;"	f	signature:(void)
boolfile	invlib.c	/^boolfile(INVCONTROL *invcntl, long *num, int boolarg)$/;"	f	signature:(INVCONTROL *invcntl, long *num, int boolarg)
invcannotalloc	invlib.c	/^invcannotalloc(unsigned n)$/;"	f	file:	signature:(unsigned n)
invcannotopen	invlib.c	/^invcannotopen(char *file)$/;"	f	file:	signature:(char *file)
invcannotwrite	invlib.c	/^invcannotwrite(char *file)$/;"	f	file:	signature:(char *file)
rcsid	mygetenv.c	/^static char const rcsid[] = "$Id: mygetenv.c,v 1.3 2001\/07\/05 16:47:04 broeker Exp $";$/;"	v	file:
mygetenv	mygetenv.c	/^mygetenv(char *variable, char *deflt)$/;"	f	signature:(char *variable, char *deflt)
rcsid	crossref.c	/^static char const rcsid[] = "$Id: crossref.c,v 1.15 2009\/08\/28 14:28:27 nhorman Exp $";$/;"	v	file:
ltobase	crossref.c	52;"	d	file:
SYMBOLINC	crossref.c	64;"	d	file:
dboffset	crossref.c	/^long	dboffset;		\/* new database offset *\/$/;"	v
errorsfound	crossref.c	/^BOOL	errorsfound;		\/* prompt before clearing messages *\/$/;"	v
lineoffset	crossref.c	/^long	lineoffset;		\/* source line database offset *\/$/;"	v
npostings	crossref.c	/^long	npostings;		\/* number of postings *\/$/;"	v
nsrcoffset	crossref.c	/^int	nsrcoffset;             \/* number of file name database offsets *\/$/;"	v
srcoffset	crossref.c	/^long	*srcoffset;             \/* source file name database offsets *\/$/;"	v
symbols	crossref.c	/^unsigned long symbols;		\/* number of symbols *\/$/;"	v
filename	crossref.c	/^static	char	*filename;	\/* file name for warning messages *\/$/;"	v	file:
fcnoffset	crossref.c	/^static	long	fcnoffset;	\/* function name database offset *\/$/;"	v	file:
macrooffset	crossref.c	/^static	long	macrooffset;	\/* macro name database offset *\/$/;"	v	file:
msymbols	crossref.c	/^static	unsigned long msymbols = SYMBOLINC; \/* maximum number of symbols *\/$/;"	v	file:
symbol	crossref.c	/^struct	symbol {	\/* symbol data *\/$/;"	s	file:
type	crossref.c	/^    int	type;		\/* type *\/$/;"	m	struct:symbol	file:	access:public
symbol::type	crossref.c	/^    int	type;		\/* type *\/$/;"	m	struct:symbol	file:	access:public
first	crossref.c	/^    unsigned int first;		\/* index of first character in text *\/$/;"	m	struct:symbol	file:	access:public
symbol::first	crossref.c	/^    unsigned int first;		\/* index of first character in text *\/$/;"	m	struct:symbol	file:	access:public
last	crossref.c	/^    unsigned int last;		\/* index of last+1 character in text *\/$/;"	m	struct:symbol	file:	access:public
symbol::last	crossref.c	/^    unsigned int last;		\/* index of last+1 character in text *\/$/;"	m	struct:symbol	file:	access:public
length	crossref.c	/^    unsigned int length;	\/* symbol length *\/$/;"	m	struct:symbol	file:	access:public
symbol::length	crossref.c	/^    unsigned int length;	\/* symbol length *\/$/;"	m	struct:symbol	file:	access:public
fcn_level	crossref.c	/^    unsigned int fcn_level;	\/* function level of the symbol *\/$/;"	m	struct:symbol	file:	access:public
symbol::fcn_level	crossref.c	/^    unsigned int fcn_level;	\/* function level of the symbol *\/$/;"	m	struct:symbol	file:	access:public
symbol	crossref.c	/^static struct symbol *symbol;$/;"	v	typeref:struct:symbol	file:
putcrossref	crossref.c	/^static	void	putcrossref(void);$/;"	p	file:	signature:(void)
savesymbol	crossref.c	/^static	void	savesymbol(int token, int num);$/;"	p	file:	signature:(int token, int num)
crossref	crossref.c	/^crossref(char *srcfile)$/;"	f	signature:(char *srcfile)
savesymbol	crossref.c	/^savesymbol(int token, int num)$/;"	f	file:	signature:(int token, int num)
putfilename	crossref.c	/^putfilename(char *srcfile)$/;"	f	signature:(char *srcfile)
putcrossref	crossref.c	/^putcrossref(void)$/;"	f	file:	signature:(void)
freecrossref	crossref.c	/^freecrossref()$/;"	f
putposting	crossref.c	/^putposting(char *term, int type)$/;"	f	signature:(char *term, int type)
writestring	crossref.c	/^writestring(char *s)$/;"	f	signature:(char *s)
warning	crossref.c	/^warning(char *text)$/;"	f	signature:(char *text)
tst	mypopen.c	40;"	d	file:
RDR	mypopen.c	41;"	d	file:
WTR	mypopen.c	42;"	d	file:
CLOSE_ON_EXEC	mypopen.c	46;"	d	file:
CLOSE_ON_EXEC	mypopen.c	48;"	d	file:
rcsid	mypopen.c	/^static char const rcsid[] = "$Id: mypopen.c,v 1.14 2006\/04\/21 10:40:29 broeker Exp $";$/;"	v	file:
popen_pid	mypopen.c	/^static pid_t popen_pid[20];$/;"	v	file:
tstat	mypopen.c	/^static RETSIGTYPE (*tstat)(int);$/;"	v	file:
myopen	mypopen.c	/^myopen(char *path, int flag, int mode)$/;"	f	signature:(char *path, int flag, int mode)
myfopen	mypopen.c	/^myfopen(char *path, char *mode)$/;"	f	signature:(char *path, char *mode)
mypopen	mypopen.c	/^mypopen(char *cmd, char *mode)$/;"	f	signature:(char *cmd, char *mode)
mypclose	mypopen.c	/^mypclose(FILE *ptr)$/;"	f	signature:(FILE *ptr)
CSCOPE_BUILD_H	build.h	37;"	d
dbputc	build.h	45;"	d
dbfputs	build.h	46;"	d
build	build.h	/^void	build(void);$/;"	p	signature:(void)
free_newbuildfiles	build.h	/^void	free_newbuildfiles(void);$/;"	p	signature:(void)
opendatabase	build.h	/^void	opendatabase(void);$/;"	p	signature:(void)
rebuild	build.h	/^void	rebuild(void);$/;"	p	signature:(void)
setup_build_filenames	build.h	/^void	setup_build_filenames(char *reffile);$/;"	p	signature:(char *reffile)
seek_to_trailer	build.h	/^void 	seek_to_trailer(FILE *f);$/;"	p	signature:(FILE *f)
sigsetjmp	display.c	60;"	d	file:
siglongjmp	display.c	61;"	d	file:
sigjmp_buf	display.c	/^typedef jmp_buf sigjmp_buf;$/;"	t	file:
rcsid	display.c	/^static char const rcsid[] = "$Id: display.c,v 1.33 2012\/05\/20 12:24:17 broeker Exp $";$/;"	v	file:
booklen	display.c	/^int	booklen;		\/* OGS book name display field length *\/$/;"	v
displine	display.c	/^int	*displine;		\/* screen line of displayed reference *\/$/;"	v
disprefs	display.c	/^unsigned int disprefs;		\/* displayed references *\/$/;"	v
field	display.c	/^int	field;			\/* input field *\/$/;"	v
filelen	display.c	/^int	filelen;		\/* file name display field length *\/$/;"	v
fcnlen	display.c	/^int	fcnlen;			\/* function name display field length *\/$/;"	v
mdisprefs	display.c	/^unsigned int mdisprefs;		\/* maximum displayed references *\/$/;"	v
nextline	display.c	/^unsigned int nextline;		\/* next line to be shown *\/$/;"	v
nonglobalrefs	display.c	/^FILE	*nonglobalrefs;		\/* non-global references file *\/$/;"	v
numlen	display.c	/^int	numlen;			\/* line number display field length *\/$/;"	v
topline	display.c	/^unsigned int topline = 1;		\/* top line of page *\/$/;"	v
bottomline	display.c	/^int	bottomline;		\/* bottom line of page *\/$/;"	v
searchcount	display.c	/^long	searchcount;		\/* count of files searched *\/$/;"	v
subsystemlen	display.c	/^int	subsystemlen;		\/* OGS subsystem name display field length *\/$/;"	v
totallines	display.c	/^unsigned int totallines;	\/* total reference lines *\/$/;"	v
fldcolumn	display.c	/^unsigned fldcolumn;		\/* input field column *\/$/;"	v
dispchars	display.c	/^const char	dispchars[] = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";$/;"	v
fldline	display.c	/^static	int	fldline;		\/* input field line *\/$/;"	v	file:
env	display.c	/^static	sigjmp_buf	env;		\/* setjmp\/longjmp buffer *\/$/;"	v	file:
lastdispline	display.c	/^static	int	lastdispline;		\/* last displayed reference line *\/$/;"	v	file:
lastmsg	display.c	/^static	char	lastmsg[MSGLEN + 1];	\/* last message displayed *\/$/;"	v	file:
helpstring	display.c	/^static	char	helpstring[] = "Press the ? key for help";$/;"	v	file:
selprompt	display.c	/^static	char	selprompt[] = $/;"	v	file:
FP	display.c	/^typedef char * (*FP)(char *);	\/* pointer to function returning a character pointer *\/$/;"	t	file:
text1	display.c	/^	char	*text1;$/;"	m	struct:__anon6	file:	access:public
__anon6::text1	display.c	/^	char	*text1;$/;"	m	struct:__anon6	file:	access:public
text2	display.c	/^	char	*text2;$/;"	m	struct:__anon6	file:	access:public
__anon6::text2	display.c	/^	char	*text2;$/;"	m	struct:__anon6	file:	access:public
findfcn	display.c	/^	FP	findfcn;$/;"	m	struct:__anon6	file:	access:public
__anon6::findfcn	display.c	/^	FP	findfcn;$/;"	m	struct:__anon6	file:	access:public
fields	display.c	/^} fields[FIELDS + 1] = {	\/* samuel has a search that is not part of the cscope display *\/$/;"	v	typeref:struct:__anon6	file:
jumpback	display.c	/^static	RETSIGTYPE	jumpback(int sig);$/;"	p	file:	signature:(int sig)
dispinit	display.c	/^dispinit(void)$/;"	f	signature:(void)
display	display.c	/^display(void)$/;"	f	signature:(void)
setfield	display.c	/^setfield(void)$/;"	f	signature:(void)
atfield	display.c	/^atfield(void)$/;"	f	signature:(void)
atchange	display.c	/^atchange(void)$/;"	f	signature:(void)
jumpback	display.c	/^jumpback(int sig)$/;"	f	file:	signature:(int sig)
search	display.c	/^search(void)$/;"	f	signature:(void)
progress	display.c	/^progress(char *what, long current, long max)$/;"	f	signature:(char *what, long current, long max)
myperror	display.c	/^myperror(char *text) $/;"	f	signature:(char *text)
postmsg	display.c	/^postmsg(char *msg) $/;"	f	signature:(char *msg)
clearmsg	display.c	/^clearmsg(void)$/;"	f	signature:(void)
clearmsg2	display.c	/^clearmsg2(void)$/;"	f	signature:(void)
postmsg2	display.c	/^postmsg2(char *msg) $/;"	f	signature:(char *msg)
posterr	display.c	/^posterr(char *msg, ...) $/;"	f	signature:(char *msg, ...)
postfatal	display.c	/^postfatal(const char *msg, ...)$/;"	f	signature:(const char *msg, ...)
seekline	display.c	/^seekline(unsigned int line) $/;"	f	signature:(unsigned int line)
ogsnames	display.c	/^ogsnames(char *file, char **subsystem, char **book)$/;"	f	signature:(char *file, char **subsystem, char **book)
pathcomponents	display.c	/^pathcomponents(char *path, int components)$/;"	f	signature:(char *path, int components)
writerefsfound	display.c	/^writerefsfound(void)$/;"	f	signature:(void)
rcsid	command.c	/^static char const rcsid[] = "$Id: command.c,v 1.36 2012\/05\/20 13:58:53 broeker Exp $";$/;"	v	file:
selecting	command.c	/^int	selecting;$/;"	v
curdispline	command.c	/^unsigned int   curdispline = 0;$/;"	v
caseless	command.c	/^BOOL	caseless;		\/* ignore letter case when searching *\/$/;"	v
change	command.c	/^BOOL	*change;		\/* change this line *\/$/;"	v
changing	command.c	/^BOOL	changing;		\/* changing text *\/$/;"	v
newpat	command.c	/^char	newpat[PATLEN + 1];	\/* new pattern *\/$/;"	v
Pattern	command.c	/^char	Pattern[PATLEN + 1];	\/* symbol or text pattern *\/$/;"	v
appendprompt	command.c	/^static	char	appendprompt[] = "Append to file: ";$/;"	v	file:
pipeprompt	command.c	/^static	char	pipeprompt[] = "Pipe to shell command: ";$/;"	v	file:
readprompt	command.c	/^static	char	readprompt[] = "Read from file: ";$/;"	v	file:
toprompt	command.c	/^static	char	toprompt[] = "To: ";$/;"	v	file:
changestring	command.c	/^static	BOOL	changestring(void);$/;"	p	file:	signature:(void)
clearprompt	command.c	/^static	void	clearprompt(void);$/;"	p	file:	signature:(void)
mark	command.c	/^static	void	mark(unsigned int i);$/;"	p	file:	signature:(unsigned int i)
scrollbar	command.c	/^static	void	scrollbar(MOUSE *p);$/;"	p	file:	signature:(MOUSE *p)
command	command.c	/^command(int commandc)$/;"	f	signature:(int commandc)
clearprompt	command.c	/^clearprompt(void)$/;"	f	file:	signature:(void)
readrefs	command.c	/^readrefs(char *filename)$/;"	f	signature:(char *filename)
changestring	command.c	/^changestring(void)$/;"	f	file:	signature:(void)
mark	command.c	/^mark(unsigned int i)$/;"	f	file:	signature:(unsigned int i)
scrollbar	command.c	/^scrollbar(MOUSE *p)$/;"	f	file:	signature:(MOUSE *p)
countrefs	command.c	/^countrefs(void)$/;"	f	signature:(void)
rcsid	dir.c	/^static char const rcsid[] = "$Id: dir.c,v 1.32 2010\/03\/04 21:11:43 broeker Exp $";$/;"	v	file:
DIRSEPS	dir.c	50;"	d	file:
DIRINC	dir.c	51;"	d	file:
HASHMOD	dir.c	52;"	d	file:
SRCINC	dir.c	53;"	d	file:
currentdir	dir.c	/^char	currentdir[PATHLEN + 1];\/* current directory *\/$/;"	v
incdirs	dir.c	/^char	**incdirs;		\/* #include directories *\/$/;"	v
srcdirs	dir.c	/^char	**srcdirs;		\/* source directories *\/$/;"	v
srcfiles	dir.c	/^char	**srcfiles;		\/* source files *\/$/;"	v
nincdirs	dir.c	/^unsigned long nincdirs;		\/* number of #include directories *\/$/;"	v
nsrcdirs	dir.c	/^unsigned long nsrcdirs;		\/* number of source directories *\/$/;"	v
nsrcfiles	dir.c	/^unsigned long nsrcfiles;	\/* number of source files *\/$/;"	v
msrcfiles	dir.c	/^unsigned long msrcfiles = SRCINC;	\/* maximum number of source files *\/$/;"	v
incnames	dir.c	/^static	char	**incnames;	\/* #include directory names without view pathing *\/$/;"	v	file:
mincdirs	dir.c	/^static	unsigned long mincdirs = DIRINC; \/* maximum number of #include directories *\/$/;"	v	file:
msrcdirs	dir.c	/^static	unsigned long msrcdirs; \/* maximum number of source directories *\/$/;"	v	file:
nvpsrcdirs	dir.c	/^static	unsigned long nvpsrcdirs; \/* number of view path source directories *\/$/;"	v	file:
listitem	dir.c	/^static	struct	listitem {	\/* source file names without view pathing *\/$/;"	s	file:
text	dir.c	/^	char	*text;$/;"	m	struct:listitem	file:	access:public
listitem::text	dir.c	/^	char	*text;$/;"	m	struct:listitem	file:	access:public
next	dir.c	/^	struct	listitem *next;$/;"	m	struct:listitem	typeref:struct:listitem::listitem	file:	access:public
listitem::next	dir.c	/^	struct	listitem *next;$/;"	m	struct:listitem	typeref:struct:listitem::listitem	file:	access:public
srcnames	dir.c	/^} *srcnames[HASHMOD];$/;"	v	typeref:struct:listitem	file:
accessible_file	dir.c	/^static	BOOL	accessible_file(char *file);$/;"	p	file:	signature:(char *file)
issrcfile	dir.c	/^static	BOOL	issrcfile(char *file);$/;"	p	file:	signature:(char *file)
addsrcdir	dir.c	/^static	void	addsrcdir(char *dir);$/;"	p	file:	signature:(char *dir)
addincdir	dir.c	/^static	void	addincdir(char *name, char *path);$/;"	p	file:	signature:(char *name, char *path)
scan_dir	dir.c	/^static	void	scan_dir(const char *dirfile, BOOL recurse);$/;"	p	file:	signature:(const char *dirfile, BOOL recurse)
makevpsrcdirs	dir.c	/^static	void	makevpsrcdirs(void);$/;"	p	file:	signature:(void)
makevpsrcdirs	dir.c	/^makevpsrcdirs(void)$/;"	f	file:	signature:(void)
sourcedir	dir.c	/^sourcedir(char *dirlist)$/;"	f	signature:(char *dirlist)
addsrcdir	dir.c	/^addsrcdir(char *dir)$/;"	f	file:	signature:(char *dir)
freesrclist	dir.c	/^freesrclist()$/;"	f
includedir	dir.c	/^includedir(char *dirlist)$/;"	f	signature:(char *dirlist)
addincdir	dir.c	/^addincdir(char *name, char *path)$/;"	f	file:	signature:(char *name, char *path)
freeinclist	dir.c	/^freeinclist()$/;"	f
makefilelist	dir.c	/^makefilelist(void)$/;"	f	signature:(void)
HANDLE_OPTION_ARGUMENT	dir.c	374;"	d	file:
scan_dir	dir.c	/^scan_dir(const char *adir, BOOL recurse_dir)$/;"	f	file:	signature:(const char *adir, BOOL recurse_dir)
issrcfile	dir.c	/^issrcfile(char *path)$/;"	f	file:	signature:(char *path)
incfile	dir.c	/^incfile(char *file, char *type)$/;"	f	signature:(char *file, char *type)
infilelist	dir.c	/^infilelist(char *path)$/;"	f	signature:(char *path)
accessible_file	dir.c	/^accessible_file(char *file)$/;"	f	file:	signature:(char *file)
inviewpath	dir.c	/^inviewpath(char *file)$/;"	f	signature:(char *file)
addsrcfile	dir.c	/^addsrcfile(char *path)$/;"	f	signature:(char *path)
freefilelist	dir.c	/^freefilelist(void)$/;"	f	signature:(void)
CSCOPE_GLOBAL_H	global.h	41;"	d
strchr	global.h	63;"	d
strrchr	global.h	64;"	d
strchr	global.h	/^char *strchr (), *strrchr ();$/;"	p	signature:()
strrchr	global.h	/^char *strchr (), *strrchr ();$/;"	p	signature:()
memcpy	global.h	68;"	d
memmove	global.h	69;"	d
memset	global.h	/^char	*memset();$/;"	p	signature:()
RETSIGTYPE	global.h	87;"	d
RETSIGTYPE	global.h	89;"	d
sighandler_t	global.h	/^typedef RETSIGTYPE (*sighandler_t)(int);$/;"	t
rpl_vsnprintf	global.h	/^int rpl_vsnprintf(char *, size_t, const char *, va_list);$/;"	p	signature:(char *, size_t, const char *, va_list)
rpl_snprintf	global.h	/^int rpl_snprintf(char *, size_t, const char *, ...);$/;"	p	signature:(char *, size_t, const char *, ...)
rpl_vasprintf	global.h	/^int rpl_vasprintf(char **, const char *, va_list);$/;"	p	signature:(char **, const char *, va_list)
rpl_asprintf	global.h	/^int rpl_asprintf(char **, const char *, ...);$/;"	p	signature:(char **, const char *, ...)
tolower	global.h	115;"	d
toupper	global.h	116;"	d
tolower	global.h	117;"	d
toupper	global.h	118;"	d
PRINTF_RETVAL_BROKEN	global.h	123;"	d
HAVE_FIXKEYPAD	global.h	136;"	d
O_TEXT	global.h	150;"	d
O_TEXT	global.h	152;"	d
O_BINARY	global.h	158;"	d
O_BINARY	global.h	160;"	d
SETMODE	global.h	164;"	d
SETMODE	global.h	169;"	d
SETMODE	global.h	172;"	d
READ	global.h	180;"	d
READ	global.h	182;"	d
WRITE	global.h	185;"	d
WRITE	global.h	187;"	d
lstat	global.h	192;"	d
NO	global.h	/^	NO,$/;"	e	enum:__anon7
YES	global.h	/^	YES$/;"	e	enum:__anon7
BOOL	global.h	/^} BOOL;$/;"	t	typeref:enum:__anon7
NOERROR	global.h	/^	NOERROR,$/;"	e	enum:__anon8
NOTSYMBOL	global.h	/^	NOTSYMBOL,$/;"	e	enum:__anon8
REGCMPERROR	global.h	/^	REGCMPERROR$/;"	e	enum:__anon8
FINDINIT	global.h	/^} FINDINIT;$/;"	t	typeref:enum:__anon8
button	global.h	/^	int	button;$/;"	m	struct:__anon9	access:public
__anon9::button	global.h	/^	int	button;$/;"	m	struct:__anon9	access:public
percent	global.h	/^	int	percent;$/;"	m	struct:__anon9	access:public
__anon9::percent	global.h	/^	int	percent;$/;"	m	struct:__anon9	access:public
x1	global.h	/^	int	x1;$/;"	m	struct:__anon9	access:public
__anon9::x1	global.h	/^	int	x1;$/;"	m	struct:__anon9	access:public
y1	global.h	/^	int	y1;$/;"	m	struct:__anon9	access:public
__anon9::y1	global.h	/^	int	y1;$/;"	m	struct:__anon9	access:public
x2	global.h	/^	int	x2;$/;"	m	struct:__anon9	access:public
__anon9::x2	global.h	/^	int	x2;$/;"	m	struct:__anon9	access:public
y2	global.h	/^	int	y2;$/;"	m	struct:__anon9	access:public
__anon9::y2	global.h	/^	int	y2;$/;"	m	struct:__anon9	access:public
MOUSE	global.h	/^} MOUSE;$/;"	t	typeref:struct:__anon9
cmd	global.h	/^struct cmd {			\/* command history struct *\/$/;"	s
prev	global.h	/^	struct	cmd *prev, *next;	\/* list ptrs *\/$/;"	m	struct:cmd	typeref:struct:cmd::cmd	access:public
cmd::prev	global.h	/^	struct	cmd *prev, *next;	\/* list ptrs *\/$/;"	m	struct:cmd	typeref:struct:cmd::cmd	access:public
next	global.h	/^	struct	cmd *prev, *next;	\/* list ptrs *\/$/;"	m	struct:cmd	typeref:struct:cmd::	access:public
cmd::next	global.h	/^	struct	cmd *prev, *next;	\/* list ptrs *\/$/;"	m	struct:cmd	typeref:struct:cmd::	access:public
field	global.h	/^	int	field;			\/* input field number *\/$/;"	m	struct:cmd	access:public
cmd::field	global.h	/^	int	field;			\/* input field number *\/$/;"	m	struct:cmd	access:public
text	global.h	/^	char	*text;			\/* input field text *\/$/;"	m	struct:cmd	access:public
cmd::text	global.h	/^	char	*text;			\/* input field text *\/$/;"	m	struct:cmd	access:public
IS_A_DICODE	global.h	230;"	d
DICODE_COMPRESS	global.h	233;"	d
keystruct	global.h	/^extern	struct	keystruct {$/;"	s
text	global.h	/^	char	*text;$/;"	m	struct:keystruct	access:public
keystruct::text	global.h	/^	char	*text;$/;"	m	struct:keystruct	access:public
delim	global.h	/^	char	delim;$/;"	m	struct:keystruct	access:public
keystruct::delim	global.h	/^	char	delim;$/;"	m	struct:keystruct	access:public
next	global.h	/^	struct	keystruct *next;$/;"	m	struct:keystruct	typeref:struct:keystruct::keystruct	access:public
keystruct::next	global.h	/^	struct	keystruct *next;$/;"	m	struct:keystruct	typeref:struct:keystruct::keystruct	access:public
filepath	global.h	/^char	*filepath(char *file);$/;"	p	signature:(char *file)
findcalledby	global.h	/^char	*findcalledby(char *pattern);$/;"	p	signature:(char *pattern)
findcalling	global.h	/^char	*findcalling(char *pattern);$/;"	p	signature:(char *pattern)
findallfcns	global.h	/^char	*findallfcns(char *dummy);$/;"	p	signature:(char *dummy)
finddef	global.h	/^char	*finddef(char *pattern);$/;"	p	signature:(char *pattern)
findfile	global.h	/^char	*findfile(char *dummy);$/;"	p	signature:(char *dummy)
findinclude	global.h	/^char	*findinclude(char *pattern);$/;"	p	signature:(char *pattern)
findsymbol	global.h	/^char	*findsymbol(char *pattern);$/;"	p	signature:(char *pattern)
findassign	global.h	/^char	*findassign(char *pattern);$/;"	p	signature:(char *pattern)
findregexp	global.h	/^char	*findregexp(char *egreppat);$/;"	p	signature:(char *egreppat)
findstring	global.h	/^char	*findstring(char *pattern);$/;"	p	signature:(char *pattern)
inviewpath	global.h	/^char	*inviewpath(char *file);$/;"	p	signature:(char *file)
lookup	global.h	/^char	*lookup(char *ident);$/;"	p	signature:(char *ident)
pathcomponents	global.h	/^char	*pathcomponents(char *path, int components);$/;"	p	signature:(char *path, int components)
read_block	global.h	/^char	*read_block(void);$/;"	p	signature:(void)
scanpast	global.h	/^char	*scanpast(char c);$/;"	p	signature:(char c)
addcmd	global.h	/^void	addcmd(int f, char *s);$/;"	p	signature:(int f, char *s)
addsrcfile	global.h	/^void	addsrcfile(char *path);$/;"	p	signature:(char *path)
askforchar	global.h	/^void	askforchar(void);$/;"	p	signature:(void)
askforreturn	global.h	/^void	askforreturn(void);$/;"	p	signature:(void)
atchange	global.h	/^void	atchange(void);$/;"	p	signature:(void)
atfield	global.h	/^void	atfield(void);$/;"	p	signature:(void)
cannotwrite	global.h	/^void	cannotwrite(char *file);$/;"	p	signature:(char *file)
cannotopen	global.h	/^void	cannotopen(char *file);$/;"	p	signature:(char *file)
clearmsg	global.h	/^void	clearmsg(void);$/;"	p	signature:(void)
clearmsg2	global.h	/^void	clearmsg2(void);$/;"	p	signature:(void)
countrefs	global.h	/^void	countrefs(void);$/;"	p	signature:(void)
crossref	global.h	/^void	crossref(char *srcfile);$/;"	p	signature:(char *srcfile)
dispinit	global.h	/^void    dispinit(void);$/;"	p	signature:(void)
display	global.h	/^void	display(void);$/;"	p	signature:(void)
drawscrollbar	global.h	/^void	drawscrollbar(int top, int bot);$/;"	p	signature:(int top, int bot)
edit	global.h	/^void	edit(char *file, char *linenum);$/;"	p	signature:(char *file, char *linenum)
editall	global.h	/^void	editall(void);$/;"	p	signature:(void)
editref	global.h	/^void	editref(int);$/;"	p	signature:(int)
entercurses	global.h	/^void	entercurses(void);$/;"	p	signature:(void)
exitcurses	global.h	/^void	exitcurses(void);$/;"	p	signature:(void)
findcleanup	global.h	/^void	findcleanup(void);$/;"	p	signature:(void)
freesrclist	global.h	/^void    freesrclist(void);$/;"	p	signature:(void)
freeinclist	global.h	/^void    freeinclist(void);$/;"	p	signature:(void)
freecrossref	global.h	/^void    freecrossref(void);$/;"	p	signature:(void)
freefilelist	global.h	/^void	freefilelist(void);$/;"	p	signature:(void)
help	global.h	/^void	help(void);$/;"	p	signature:(void)
incfile	global.h	/^void	incfile(char *file, char *type);$/;"	p	signature:(char *file, char *type)
includedir	global.h	/^void    includedir(char *_dirname);$/;"	p	signature:(char *_dirname)
initsymtab	global.h	/^void    initsymtab(void);$/;"	p	signature:(void)
makefilelist	global.h	/^void	makefilelist(void);$/;"	p	signature:(void)
mousecleanup	global.h	/^void	mousecleanup(void);$/;"	p	signature:(void)
mousemenu	global.h	/^void	mousemenu(void);$/;"	p	signature:(void)
mouseinit	global.h	/^void	mouseinit(void);$/;"	p	signature:(void)
mousereinit	global.h	/^void	mousereinit(void);$/;"	p	signature:(void)
myexit	global.h	/^void	myexit(int sig);$/;"	p	signature:(int sig)
myperror	global.h	/^void	myperror(char *text);$/;"	p	signature:(char *text)
ogsnames	global.h	/^void	ogsnames(char *file, char **subsystem, char **book);$/;"	p	signature:(char *file, char **subsystem, char **book)
progress	global.h	/^void	progress(char *what, long current, long max);$/;"	p	signature:(char *what, long current, long max)
putfilename	global.h	/^void	putfilename(char *srcfile);$/;"	p	signature:(char *srcfile)
postmsg	global.h	/^void	postmsg(char *msg);$/;"	p	signature:(char *msg)
postmsg2	global.h	/^void	postmsg2(char *msg);$/;"	p	signature:(char *msg)
posterr	global.h	/^void	posterr(char *msg,...);$/;"	p	signature:(char *msg,...)
postfatal	global.h	/^void	postfatal(const char *msg,...);$/;"	p	signature:(const char *msg,...)
putposting	global.h	/^void	putposting(char *term, int type);$/;"	p	signature:(char *term, int type)
fetch_string_from_dbase	global.h	/^void	fetch_string_from_dbase(char *, size_t);$/;"	p	signature:(char *, size_t)
resetcmd	global.h	/^void	resetcmd(void);$/;"	p	signature:(void)
seekline	global.h	/^void	seekline(unsigned int line);$/;"	p	signature:(unsigned int line)
setfield	global.h	/^void	setfield(void);$/;"	p	signature:(void)
shellpath	global.h	/^void	shellpath(char *out, int limit, char *in);$/;"	p	signature:(char *out, int limit, char *in)
sourcedir	global.h	/^void    sourcedir(char *dirlist);$/;"	p	signature:(char *dirlist)
myungetch	global.h	/^void	myungetch(int c);$/;"	p	signature:(int c)
warning	global.h	/^void	warning(char *text);$/;"	p	signature:(char *text)
writestring	global.h	/^void	writestring(char *s);$/;"	p	signature:(char *s)
command	global.h	/^BOOL	command(int commandc);$/;"	p	signature:(int commandc)
infilelist	global.h	/^BOOL	infilelist(char *file);$/;"	p	signature:(char *file)
readrefs	global.h	/^BOOL	readrefs(char *filename);$/;"	p	signature:(char *filename)
search	global.h	/^BOOL	search(void);$/;"	p	signature:(void)
writerefsfound	global.h	/^BOOL	writerefsfound(void);$/;"	p	signature:(void)
findinit	global.h	/^FINDINIT findinit(char *pattern);$/;"	p	signature:(char *pattern)
getmouseaction	global.h	/^MOUSE	*getmouseaction(char leading_char);$/;"	p	signature:(char leading_char)
currentcmd	global.h	/^struct	cmd *currentcmd(void);$/;"	p	signature:(void)
prevcmd	global.h	/^struct	cmd *prevcmd(void);$/;"	p	signature:(void)
nextcmd	global.h	/^struct	cmd *nextcmd(void);$/;"	p	signature:(void)
egrep	global.h	/^int	egrep(char *file, FILE *output, char *format);$/;"	p	signature:(char *file, FILE *output, char *format)
mygetline	global.h	/^int	mygetline(char p[], char s[], unsigned size, int firstchar, BOOL iscaseless);$/;"	p	signature:(char p[], char s[], unsigned size, int firstchar, BOOL iscaseless)
mygetch	global.h	/^int	mygetch(void);$/;"	p	signature:(void)
hash	global.h	/^int	hash(char *ss);$/;"	p	signature:(char *ss)
execute	global.h	/^int	execute(char *a, ...);$/;"	p	signature:(char *a, ...)
dbseek	global.h	/^long	dbseek(long offset);$/;"	p	signature:(long offset)
